{"version":3,"sources":["reducers/auth-reducer.js","reducers/project-reducer.js","reducers/index.js","actions/types.js","store.js","actions/auth-action.js","hooks/http-hook.js","components/shared/layout/MainNavbar.js","hooks/form-hook.js","utils/validators.js","components/shared/FormElements/Input.js","components/auth/auth.js","components/auth/initSwitchLayout.js","utils/helper.js","actions/project-action.js","components/Dashboard/Dashboard.js","components/projects/ProjectItem.js","components/projects/Projects.js","components/profile/Profile.js","components/routing/PrivateRoute.js","components/EditProfile/EditProfile.js","components/Member/MemberItem.js","components/Member/Members.js","components/ChangeImage/UploadImage.js","actions/user-action.js","components/project/projectSummary/ProjectSummary.js","components/project/overview/MemberRow.js","components/project/overview/Overview.js","components/project/discussion/DiscussionRow.js","components/project/discussion/Discussion.js","components/project/activities/ActivityDetailsRow.js","components/project/activities/ActivityRow.js","components/project/activities/ActivitiesScreen.js","components/project/edit-project-details/EditProjectDetails.js","components/project/todos/IncompleteTodoRow.js","components/project/todos/CompletedTodoRow.js","components/project/todos/Todos.js","components/project/bugs/NotFixedBugRow.js","components/project/bugs/FixedBugRow.js","components/project/bugs/Bugs.js","components/project/ProjectScreen.js","components/routing/Routes.js","App.js","index.js"],"names":["initialState","token","localStorage","getItem","isAuthenticated","loading","user","chartData","activitySummary","todoBugSummary","users","selectedUser","noImage","noMember","projects","project","activities","isMemberOfThisProject","isCreatedByUser","combineReducers","auth","state","action","type","payload","setItem","removeItem","loadedUser","discussion","todos","bugs","notAssignMembers","members","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","loadUser","method","dispatch","a","process","responseData","useHttpClient","useState","isLoading","setIsLoading","activeHttpRequests","useRef","sendRequest","useCallback","url","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","filter","reqCtrl","ok","Error","error","message","data","M","toast","html","classes","useEffect","forEach","aboutCtr","abort","connect","logout","profileImage","setProfileImage","imageUrl","elems","document","querySelectorAll","Sidenav","init","handleLogout","authSidebarLinks","className","href","id","onClick","guestSidebarLinks","Fragment","role","data-target","src","name","username","email","formReducer","formIsValid","elementTitle","inputs","isValid","value","useForm","initialInputs","initialValidity","useReducer","formState","inputData","formValidity","VALIDATOR_MINLENGTH","val","validate","validators","validator","trim","length","test","inputReducer","isClicked","Input","props","initialValue","inputState","onInput","changeHandler","event","target","clickHandler","element","placeholder","onChange","onBlur","cols","rows","label","htmlFor","errorText","login","password","JSON","stringify","console","register","log","isLoginMode","setIsLoginMode","isMobile","setIsMobile","history","useHistory","navigator","userAgent","inputHandler","setFormData","signUpButton","getElementById","signInButton","container","addEventListener","classList","add","remove","initSwitchLayout","switchModeHandler","undefined","confirmPassword","prevMode","authSubmitHandler","preventDefault","emailInput","passwordInput","onSubmit","disabled","initAllModal","Modal","initModalAndOpen","modalId","Modalelem","querySelector","open","prepareActivityHelper","allActivities","map","bug","time","text","fixedAt","todo","doneAt","sort","b","Date","modifiedActivities","currentDate","previousDate","sameDateActivities","activity","getDate","getMonth","getFullYear","unshift","lastArray","i","getAllProjects","Authorization","toggleIsDone","projectId","todoId","isDone","toggleIsFixed","bugId","isFixed","getProjectById","getNotAssignedMember","prepareActivity","preparedActivities","prepareTodoAndBugForPreview","allCompletedActivity","allNotCompletedActivity","projectName","completedTodoOfAProject","notCompletedTodoOfAProject","notFixedBugOfAProject","fixedBugOfAProject","dataPreviewForChart","finishedActivity","completedTodoCount","notCompletedTodoCount","notFixedBugCount","fixedBugCount","reverse","completedTodo","fixedBug","notCompletedTodo","notFixedBug","finishedActivityReversed","activityForChart","finalActivity","concat","completedActivity","notCompletedActivity","todoDone","todoNotDone","width","height","chartType","loader","options","hAxis","title","vAxis","series","1","curveType","rootProps","key","_id","openProject","description","userItem","alt","addProject","projectCategory","projectDescription","projectDeadline","category","deadline","selectedProjectType","setSelectedProjectType","completedProjectCount","setCompletedProjectCount","inCompletedProjectCount","setInCompletedProjectCount","done","notDone","addProjectHandler","getUserByUserName","match","setShowUser","params","social","twitter","rel","github","facebook","linkedIn","stackoverflow","youtube","instagram","bio","skills","skill","index","Component","component","selectedItem","rest","render","to","updateUser","fullName","newPassword","confirmNewPassword","currentPassword","saveProfile","MemberItem","clickedOnEmail","openMemberDetails","getAllUser","uploadProfileImage","base64EncodedImage","fileInputState","setFileInputState","previewSource","setPreviewSource","selectedFile","setSelectedFile","setLoading","previewFile","file","reader","FileReader","readAsDataURL","onloadend","result","onerror","handleSubmitFile","e","uploadImage","files","style","createdBy","deleteMemberFromProject","member","removeMember","window","confirm","assignAnMemberToAProject","toggleIsProjectIsFinished","deleteProject","addMember","setAddMember","selectList","selectObject","createElement","appendChild","FormSelect","handleIsDoneClick","handleSetAddMember","handleAddMember","handleProjectDelete","selected","defaultValue","deleteDiscussion","discussionId","handleClickOnEdit","handleEditClick","handleDeleteClick","addDiscussion","discussionText","editDiscussion","discussionEditText","useParams","editDiscussionText","setEditDiscussionText","setDiscussionId","setAddDiscussionData","addDiscussionHandler","editDiscussionHandler","initEditDiscussionData","ActivityDetailsRow","activityDetail","toUTCString","ActivityRow","day","month","year","editProjectDetails","projectDetails","saveProjectDetails","deleteTodo","clicked","handleTodoDone","handleDelete","handleToggleIsDone","addTodo","todoText","editTodo","todoEditText","editTodoText","setEditTodoText","setTodoId","initAddTodoData","addTodoHandler","editTodoHandler","setEditTodoData","deleteBug","handleIsFixed","fixed","addBug","bugText","editBug","bugEditText","editBugText","setEditBugText","setBugId","setAddBugData","addBugHandler","editBugHandler","setEditBugData","prepareWorkDonePreview","dataPreview","newDataPreview","preparedActivitiesReverse","singleActivity","finalArrayForChart","getIsMemberAndCreatorOfProject","Routes","exact","path","Dashboard","Projects","Profile","EditProfile","MemberList","UploadImage","Project","App","Auth","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.65209569.chunk.js","sourcesContent":["import {\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT, PREPARE_DATA_FOR_DASHBOARD,\n    ALL_USER_LOADED,\n    LOADED_SELECTED_USER\n} from \"../actions/types\";\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    loading: true,\n    user: null,\n    chartData: null,\n    activitySummary: null,\n    todoBugSummary: null,\n    users: [],\n    selectedUser: null,\n    noImage: 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg',\n    noMember: 'https://res.cloudinary.com/store-image/image/upload/v1601440064/muswbaylzg5sjxqv7cwb.jpg'\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload);\n            return {\n                ...state,\n                token: payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                chartData: null,\n                activitySummary: null,\n                todoBugSummary: null,\n                users: [],\n                selectedUser: null,\n            }\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                chartData: null,\n                activitySummary: null,\n                todoBugSummary: null,\n                users: [],\n                selectedUser: null,\n            }\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case PREPARE_DATA_FOR_DASHBOARD:\n            return {\n                ...state,\n                chartData: payload.chartData,\n                activitySummary: payload.activitySummary,\n                todoBugSummary: payload.todoBugSummary,\n                loading: false\n            }\n        case ALL_USER_LOADED:\n            return {\n                ...state,\n                users: payload            }\n        case LOADED_SELECTED_USER:\n            return {\n                ...state,\n                loadedUser: payload,\n                loading: false\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n","import {\n    ADD_PROJECT,\n    GET_PROJECTS,\n    GET_PROJECT,\n    ADD_DISCUSSION,\n    ADD_TODO,\n    ADD_BUG,\n    UPDATE_TODO,\n    UPDATE_BUG,\n    ADD_NOT_ASSIGNED_MEMBER,\n    ADD_MEMBER_AT_PROJECT,\n    ACTIVITY_PREPARED,\n    ADD_WORK_PREVIEW,\n    ADD_IS_MEMBER_AND_CREATOR,\n    DELETE_BUG, DELETE_TODO, DELETE_MEMBER_FROM_PROJECT, UPDATE_DISCUSSION, DELETE_DISCUSSION\n} from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: null,\n    activities: null,\n    chartData: [],\n    isMemberOfThisProject: false,\n    isCreatedByUser: false,\n};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case ADD_PROJECT:\n            return {\n                ...state,\n                projects: [...state.projects, payload]\n            };\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: payload\n            };\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: payload\n            };\n        case ADD_DISCUSSION:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    discussion: [payload, ...state.project.discussion]\n                }\n            };\n        case UPDATE_DISCUSSION:\n        case DELETE_DISCUSSION:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    discussion: payload\n                }\n            };\n        case ADD_TODO:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    todos: [payload, ...state.project.todos]\n                }\n            };\n        case ADD_BUG:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    bugs: [payload, ...state.project.bugs]\n                }\n            };\n        case UPDATE_TODO:\n        case DELETE_TODO:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    todos: payload\n                }\n            };\n        case UPDATE_BUG:\n        case DELETE_BUG:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    bugs: payload\n                }\n            }\n        case ADD_NOT_ASSIGNED_MEMBER:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    notAssignMembers: payload\n                }\n            }\n        case ADD_MEMBER_AT_PROJECT:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    members: [ payload, ...state.project.members]\n                }\n            }\n        case DELETE_MEMBER_FROM_PROJECT:\n            return {\n                ...state,\n                project: {\n                    ...state.project,\n                    members: payload\n                }\n            }\n        case ACTIVITY_PREPARED:\n            return {\n                ...state,\n                activities: payload\n            }\n        case ADD_WORK_PREVIEW:\n            return {\n                ...state,\n                chartData: payload\n            }\n        case ADD_IS_MEMBER_AND_CREATOR:\n            return {\n                ...state,\n                isMemberOfThisProject: payload.isMemberOfThisProject,\n                isCreatedByUser: payload.isCreatedByUser\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport auth from './auth-reducer';\nimport project from './project-reducer';\n\nexport default combineReducers({\n    auth,\n    project\n});\n","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\n\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const EDIT_PROJECT = 'EDIT_PROJECT';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const ADD_DISCUSSION = 'ADD_DISCUSSION';\nexport const UPDATE_DISCUSSION = 'UPDATE_DISCUSSION';\nexport const DELETE_DISCUSSION = 'DELETE_DISCUSSION';\nexport const ADD_TODO = 'ADD_TODO';\nexport const ADD_BUG = 'ADD_BUG';\nexport const UPDATE_TODO = 'UPDATE_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const UPDATE_BUG = 'UPDATE_BUG';\nexport const DELETE_BUG = 'DELETE_BUG';\nexport const ADD_NOT_ASSIGNED_MEMBER = 'ADD_NOT_ASSIGNED_MEMBER';\nexport const ADD_MEMBER_AT_PROJECT = 'ADD_MEMBER_AT_PROJECT';\nexport const DELETE_MEMBER_FROM_PROJECT = 'DELETE_MEMBER_FROM_PROJECT';\nexport const ACTIVITY_PREPARED = 'ACTIVITY_PREPARED';\nexport const ADD_WORK_PREVIEW = 'ADD_WORK_PREVIEW';\nexport const ADD_IS_MEMBER_AND_CREATOR = 'ADD_IS_MEMBER_AND_CREATOR';\nexport const PREPARE_DATA_FOR_DASHBOARD = 'PREPARE_DATA_FOR_DASHBOARD';\nexport const ALL_USER_LOADED = 'ALL_USER_LOADED';\nexport const LOADED_SELECTED_USER = 'LOADED_SELECTED_USER';\n\nexport const UPLOAD_PROFILE_IMAGE = 'UPLOAD_PROFILE_IMAGE';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    ALL_USER_LOADED,\n    AUTH_ERROR, LOGIN_SUCCESS, LOGOUT, REGISTER_SUCCESS, USER_LOADED,\n    LOADED_SELECTED_USER\n} from './types'\nimport M from \"materialize-css\";\n\n//Load user form token\nexport const loadUser = (method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/auth',\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        //if token is not valid it returns undefined and update the state isAuthenticated to true it will prevent that\n        if(responseData) {\n            dispatch({\n                type: USER_LOADED,\n                payload: responseData\n            })\n        } else {\n            dispatch({\n                type: AUTH_ERROR\n            })\n        }\n    } catch (error) {\n\n    }\n}\n\n//Register new user\nexport const register = ( name, username, email, password, method ) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/user',\n            'POST',\n            JSON.stringify({\n                name,\n                username,\n                email,\n                password\n            }),\n            {\n                'Content-Type': 'application/json'\n            }\n        );\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: responseData.token\n        });\n    } catch (e) {\n        console.log(e);\n    }\n}\n\n//Login User\nexport const login = (email, password, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/auth',\n            'POST',\n            JSON.stringify({\n                email,\n                password\n            }),\n            {\n                'Content-Type': 'application/json'\n            }\n        );\n        if(responseData) {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: responseData.token\n            });\n        }\n    } catch (err) {\n        console.error(err);\n    }\n}\n\n//Edit user edit-project-details\nexport const updateUser = (formState, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/user',\n            'PUT',\n            JSON.stringify({\n                formState\n            }),\n            {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'User Details Updated', classes: 'green'});\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Logout user\nexport const logout = () => async dispatch => {\n    dispatch({ type: LOGOUT });\n}\n\n//Get all user\nexport const getAllUser = (method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/user',\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        dispatch({\n            type: ALL_USER_LOADED,\n            payload: responseData\n        });\n    } catch (error) {}\n}\n\n//Get user by username\nexport const getUserByUserName = (username, method) => async dispatch => {\n    console.log('in getUserByUserName')\n    try {\n        const responseData =  await method(\n            process.env.REACT_APP_ASSET_URL + '/api/user/' + username,\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        dispatch({\n            type: LOADED_SELECTED_USER,\n            payload: responseData\n        });\n    } catch (error) {\n        console.error(error);\n    }\n}\n","import { useState, useCallback, useRef, useEffect } from 'react';\nimport M from \"materialize-css\";\n\nexport const useHttpClient = () => {\n    const [ isLoading, setIsLoading ] = useState(true);\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        const httpAbortCtrl = new AbortController();\n        activeHttpRequests.current.push(httpAbortCtrl);\n         try {\n            const response = await fetch(url, {\n                method,\n                body,\n                headers,\n                signal: httpAbortCtrl.signal\n            });\n            const responseData = await response.json();\n            activeHttpRequests.current = activeHttpRequests.current.filter(\n                reqCtrl => reqCtrl !== httpAbortCtrl\n            );\n\n            if(!response.ok) {\n                throw new Error(responseData.error);\n            }\n\n            setIsLoading(false);\n            return responseData;\n        } catch (error) {\n             setIsLoading(false);\n             //\n             if(error.message !== 'Login First' || (\n                 error.response &&\n                 error.response.data &&\n                 error.response.data.message\n             ))\n                M.toast({html: error.message, classes: 'red'});\n        }\n    }, []);\n\n\n    useEffect(() => {\n        //this runs as cleanup function before next time useEffect run or also when an component use useEffect unmount\n        return () => {\n            activeHttpRequests.current.forEach(aboutCtr => aboutCtr.abort());\n        }\n    }, []);\n\n    return { isLoading, sendRequest };\n}\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { logout } from '../../../actions/auth-action'\nimport M from \"materialize-css\";\nimport './MainNavbar.css';\n\nconst Navbar = ({ auth: { isAuthenticated, loading, user }, logout }) => {\n    const [ profileImage, setProfileImage ] = useState(\"\");\n    useEffect(() => {\n        if(user?.profileImage?.imageUrl) {\n            setProfileImage(user.profileImage.imageUrl);\n        }\n        let elems = document.querySelectorAll('.sidenav');\n        M.Sidenav.init(elems);\n    }, [user]);\n\n    const handleLogout = async () => {\n        setProfileImage('');\n        await logout();\n    }\n\n    //Link for user at sidebar\n    const authSidebarLinks = (\n        <li>\n            <a className=\"waves-effect\" href=\"#\">\n                <button id=\"sidebar__button\" onClick={handleLogout}>Logout</button>\n            </a>\n        </li>\n    )\n\n    const guestSidebarLinks = (\n        <React.Fragment>\n            <li><a className=\"waves-effect authentication\" href=\"/\">Sign In / Up</a></li>\n        </React.Fragment>\n    )\n\n    //Link for user navbar\n    const authNavbarLinks = (\n        <li>\n            <a className=\"waves-effect\" href=\"#\">\n                <button id=\"navbar__button\" onClick={handleLogout}>Logout</button>\n            </a>\n        </li>\n    )\n\n    const guestNavbarLinks = (\n        <React.Fragment>\n            <li><a href=\"/\">Sign In / Up</a></li>\n        </React.Fragment>\n    )\n\n    return (\n        <section>\n            {/*Top Navbar*/}\n            <div className=\"navbar-fixed\">\n                <nav className=\"light-blue lighten-1\" role=\"navigation\">\n                    <div className=\"nav-wrapper\">\n                        <a id=\"logo-container\" href=\"/\" className=\"brand-logo\">Project Tracker</a>\n                        <a href=\"#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\n                            <i className=\"material-icons\">menu</i>\n                        </a>\n                    </div>\n                </nav>\n            </div>\n\n            {/* Side Navbar */}\n            <div className=\"scrollable2_sidenav2\">\n                <ul id=\"slide-out\" className=\"sidenav sidenav-fixed\">\n                    <li>\n                        <div className=\"user-view blue lighten-3\">\n                            <a href=\"/profile\"><img className=\"image_navbar\" src={profileImage}/></a>\n                            <a href=\"/profile\"><span className=\"black-text name\">{user ? user.name : 'Login First'}</span></a>\n                            <a href=\"/profile\"><span className=\"black-text name\">{user ? user.username : ''}</span></a>\n                            <a href=\"/profile\"><span className=\"black-text email\">{user ? user.email : ''}</span></a>\n                        </div>\n                    </li>\n                    {isAuthenticated && (\n                        <>\n                            <li><a href=\"/dashboard\">Dashboard</a></li>\n                            <li><a href=\"/edit-profile\">Edit Profile</a></li>\n                            <li><a href=\"/profile\">Profile</a></li>\n                            <li><a href=\"/members\">Members</a></li>\n                            <li><a href=\"/projects\">Projects</a></li>\n                            <li><div className=\"divider\"></div></li>\n                        </>\n                    )}\n                    {isAuthenticated ? authSidebarLinks : guestSidebarLinks }\n                </ul>\n            </div>\n        </section>\n    );\n};\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import { useCallback, useReducer } from 'react'\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true; //For overall form validity. First assume that true means valid.\n            for(const elementTitle in state.inputs) {\n                //When switch form signup to signin then will be first and last name field and value will be undefined\n                //which will lead to error so it should be pass\n                if(!state.inputs[elementTitle]) continue;\n                if(elementTitle === action.elementTitle) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[elementTitle].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.elementTitle] : { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid\n            };\n        case 'SET_DATA':\n            return {\n                ...state,\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\nexport const useForm = (initialInputs, initialValidity) => {\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialValidity\n    });\n\n    const inputHandler = useCallback(async (elementTitle, value, isValid) => {\n        await dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            elementTitle: elementTitle\n        })\n    }, []);\n\n    const setFormData = useCallback(async (inputData, formValidity) => {\n        await dispatch({\n            type: 'SET_DATA',\n            inputs: inputData,\n            formIsValid: formValidity\n        })\n    }, []);\n\n    return [ formState, inputHandler, setFormData ];\n}\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_NOT_REQUIRE = 'NOT_REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_NOT_REQUIRE = () => ({ type: VALIDATOR_TYPE_NOT_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n    type: VALIDATOR_TYPE_MINLENGTH,\n    val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n    type: VALIDATOR_TYPE_MAXLENGTH,\n    val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    for (const validator of validators) {\n        if(validator.type === VALIDATOR_TYPE_NOT_REQUIRE) {\n            isValid = isValid && true;\n        }\n        if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n            isValid = isValid && value.trim().length > 0;\n        }\n        if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n            isValid = isValid && value.trim().length >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n            isValid = isValid && value.trim().length <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MIN) {\n            isValid = isValid && +value >= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_MAX) {\n            isValid = isValid && +value <= validator.val;\n        }\n        if (validator.type === VALIDATOR_TYPE_EMAIL) {\n            isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n        }\n    }\n    return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../../utils/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'CLICKED':\n            return {\n                ...state,\n                isClicked: true\n            };\n        default:\n            return state;\n    }\n}\n\nconst Input = props => {\n    const [ inputState, dispatch ] = useReducer(inputReducer, {\n        value: props.initialValue || '',\n        isClicked: false,\n        isValid: props.initialValidity || false\n    });\n\n    const { elementTitle, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(elementTitle, value, isValid);\n    }, [elementTitle, value, isValid]);\n\n    const changeHandler = event => {\n        dispatch({\n            type: 'CHANGE',\n            val: event.target.value,\n            validators: props.validators\n        });\n    };\n\n    const clickHandler = () => {\n        dispatch({\n            type: 'CLICKED'\n        })\n    };\n\n    const element = props.element === 'input' ? (\n        <input\n            id={props.elementTitle}\n            type={props.type}\n            placeholder={props.placeholder}\n            onChange={changeHandler}\n            onBlur={clickHandler}\n            value={inputState.value}\n        />\n    ) : (\n        <textarea\n            id={props.elementTitle}\n            cols={props.cols || 30}\n            rows={props.rows || 10}\n            onChange={changeHandler}\n            onBlur={clickHandler}\n            value={inputState.value}\n        />\n    );\n\n    return <div className={`form-control ${!inputState.isValid && inputState.isClicked && 'form-control--invalid'}`}>\n        {props.label && <label htmlFor={props.elementTitle}>{props.label}</label>}\n        {element}\n        {!inputState.isValid && inputState.isClicked && <p>{props.errorText}</p>}\n    </div>\n}\n\nexport default Input;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { useForm } from \"../../hooks/form-hook\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { login, register, loadUser } from \"../../actions/auth-action\";\nimport { initSwitchLayout } from \"./initSwitchLayout\";\nimport Input from \"../shared/FormElements/Input\";\nimport {\n    VALIDATOR_EMAIL,\n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE\n} from \"../../utils/validators\";\nimport './auth.css';\nimport M from \"materialize-css\";\n\nconst Auth = ({ login, register , isAuthenticated , loadUser, user, token }) => {\n    const [ isLoginMode, setIsLoginMode ] = useState(true);\n    const [ isMobile, setIsMobile ] = useState(false);\n    const { sendRequest } = useHttpClient();\n    const history = useHistory();\n\n    useEffect(() => {\n        if(user) {\n            history.push('/dashboard');\n        }\n        if (/Mobi/.test(navigator.userAgent))\n            setIsMobile(true);\n    }, [user])\n\n    const [ formState, inputHandler, setFormData ] = useForm(\n        {\n            email: {\n                value: '',\n                isValid: false,\n            },\n            password: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    useEffect(() => {\n        initSwitchLayout();\n    }, [])\n\n    const switchModeHandler = async () => {\n        if(!isLoginMode) {\n            //Switching from sign up to sign in mode\n            await setFormData(\n                {\n                    ...formState.inputs,\n                    name: undefined,\n                    confirmPassword: undefined,\n                    username: undefined\n                },\n                 formState.inputs.email.isValid && formState.inputs.password.isValid\n            );\n        } else {\n            //Switching from sign in to sing up mode\n            await setFormData(\n                 {\n                    ...formState.inputs,\n                    name: {\n                        value: '',\n                        isValid: false\n                    },\n                     username: {\n                        value: '',\n                        isValid: false,\n                    },\n                    confirmPassword: {\n                        value: '',\n                        isValid: false\n                    }\n                },\n                false\n            );\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authSubmitHandler = async event => {\n        event.preventDefault();\n        if(isLoginMode) {\n            try {\n                await login(formState.inputs.email.value, formState.inputs.password.value, sendRequest);\n                await loadUser(sendRequest);\n            } catch (error) {\n                console.error(error);\n            }\n        } else {\n            try {\n                if(formState.inputs.password.value !== formState.inputs.confirmPassword.value) {\n                    M.toast({html: 'Confirm password and Confirm new password have to be same', classes: 'red'});\n                } else {\n                    try {\n                        await register(formState.inputs.name.value, formState.inputs.username.value,\n                            formState.inputs.email.value, formState.inputs.password.value, sendRequest);\n                        await loadUser(sendRequest);\n                    } catch (error) {\n                        console.error(error);\n                    }\n                }\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    };\n\n    const emailInput = <Input\n        element=\"input\"\n        elementTitle=\"email\"\n        type=\"email\"\n        placeholder=\"Email\"\n        validators={[VALIDATOR_EMAIL()]}\n        errorText=\"Please enter a valid email address.\"\n        onInput={inputHandler}\n    />;\n\n    const passwordInput = <Input\n        element=\"input\"\n        placeholder=\"Password\"\n        elementTitle=\"password\"\n        type=\"password\"\n        validators={[VALIDATOR_MINLENGTH(6)]}\n        errorText=\"Please enter at least 6 character.\"\n        onInput={inputHandler}\n    />;\n\n    return (\n        <div className=\"main signin__signup\">\n            <div className=\"row\">\n                <br/><br/>\n                {!isMobile && (\n                    <div className=\"col s12 m12 l12\">\n                        <div className=\"container\" id=\"container\">\n                            {!isLoginMode && (\n                                <div className=\"form-container sign-up-container\">\n                                    <form onSubmit={authSubmitHandler}>\n                                        <h4>Create Account</h4>\n                                        <Input\n                                            element=\"input\"\n                                            elementTitle=\"name\"\n                                            type=\"text\"\n                                            placeholder=\"Name\"\n                                            validators={[VALIDATOR_REQUIRE()]}\n                                            errorText=\"Please enter your full name.\"\n                                            onInput={inputHandler}\n                                        />\n                                        <Input\n                                            element=\"input\"\n                                            elementTitle=\"username\"\n                                            type=\"text\"\n                                            placeholder=\"User Name\"\n                                            validators={[VALIDATOR_REQUIRE()]}\n                                            errorText=\"Please enter your full name.\"\n                                            onInput={inputHandler}\n                                        />\n                                        {emailInput}\n                                        {passwordInput}\n                                        <Input\n                                            element=\"input\"\n                                            placeholder=\"Confirm Password\"\n                                            elementTitle=\"confirmPassword\"\n                                            type=\"password\"\n                                            validators={[VALIDATOR_MINLENGTH(6)]}\n                                            errorText=\"Please enter at least 6 character.\"\n                                            onInput={inputHandler}\n                                        />\n                                        <button id=\"signup__button\" disabled={!formState.isValid}>Sign Up</button>\n                                    </form>\n                                </div>\n                            )}\n\n                            {isLoginMode && (\n                                <div className=\"form-container sign-in-container\">\n                                    <form onSubmit={authSubmitHandler}>\n                                        <h3>Sign in</h3>\n                                        {emailInput}\n                                        {passwordInput}\n                                        <a href=\"#\">Forgot your password?</a>\n                                        <button disabled={!formState.isValid}>Sign In</button>\n                                    </form>\n                                </div>\n                            )}\n\n                            <div className=\"overlay-container\">\n                                <div className=\"overlay\">\n                                    <div className=\"overlay-panel overlay-left\">\n                                        <h3>Welcome Back!</h3>\n                                        <p>To keep connected with us please login with your personal info</p>\n                                        <button onClick={switchModeHandler} className=\"ghost\" id=\"signIn\">Sign In</button>\n                                    </div>\n                                    <div className=\"overlay-panel overlay-right\">\n                                        <h4>Do Not Have Account?</h4>\n                                        <p>Enter your personal details and start journey with us</p>\n                                        <button onClick={switchModeHandler} className=\"ghost\" id=\"signUp\">Sign Up</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n\n\n                {isMobile && (\n                    <div className=\"col s12 m12 l12\">\n                        <div className=\"container\" id=\"container\">\n                            {/*<div className=\"row\">*/}\n                                {!isLoginMode && (\n                                    <div className=\"form-container signInForMobile\">\n                                        <form onSubmit={authSubmitHandler}>\n                                            <h4>Create Account</h4>\n                                            <Input\n                                                element=\"input\"\n                                                elementTitle=\"name\"\n                                                type=\"text\"\n                                                placeholder=\"Name\"\n                                                validators={[VALIDATOR_REQUIRE()]}\n                                                errorText=\"Please enter your full name.\"\n                                                onInput={inputHandler}\n                                            />\n                                            <Input\n                                                element=\"input\"\n                                                elementTitle=\"username\"\n                                                type=\"text\"\n                                                placeholder=\"User Name\"\n                                                validators={[VALIDATOR_REQUIRE()]}\n                                                errorText=\"Please enter your full name.\"\n                                                onInput={inputHandler}\n                                            />\n                                            {emailInput}\n                                            {passwordInput}\n                                            <Input\n                                                element=\"input\"\n                                                placeholder=\"Confirm Password\"\n                                                elementTitle=\"confirmPassword\"\n                                                type=\"password\"\n                                                validators={[VALIDATOR_MINLENGTH(6)]}\n                                                errorText=\"Please enter at least 6 character.\"\n                                                onInput={inputHandler}\n                                            />\n                                            <button id=\"signup__button\" disabled={!formState.isValid}>Sign Up</button>\n                                            <button id=\"switchButtonForMobile\"\n                                                    onClick={() => switchModeHandler()}>\n                                                Switch to {isLoginMode ? 'Sign Up' : 'Sign In'}\n                                            </button>\n                                        </form>\n                                    </div>\n                                )}\n\n                                {isLoginMode && (\n                                    <div className=\"form-container signUpForMobile\">\n                                        <form onSubmit={authSubmitHandler}>\n                                            <h3>Sign in</h3>\n                                            {emailInput}\n                                            {passwordInput}\n                                            <a href=\"#\">Forgot your password?</a>\n                                            <button disabled={!formState.isValid}>Sign In</button>\n                                            <button id=\"switchButtonForMobile\"\n                                                    onClick={() => switchModeHandler()}>\n                                                Switch to {isLoginMode ? 'Sign Up' : 'Sign In'}\n                                            </button>\n                                        </form>\n                                    </div>\n                                )}\n\n                            {/*</div>*/}\n                            {/*<div className=\"row\">*/}\n                            {/*    <div className=\"overlay-container\">*/}\n                            {/*        <div className=\"overlay\">*/}\n                            {/*            <div className=\"overlay-panel overlay-left\">*/}\n                            {/*                <h3>Welcome Back!</h3>*/}\n                            {/*                <p>To keep connected with us please login with your personal info</p>*/}\n                            {/*                <button onClick={switchModeHandler} className=\"ghost\" id=\"signIn\">Sign In</button>*/}\n                            {/*            </div>*/}\n                            {/*            <div className=\"overlay-panel overlay-right\">*/}\n                            {/*                <h4>Do Not Have Account?</h4>*/}\n                            {/*                <p>Enter your personal details and start journey with us</p>*/}\n                            {/*                <button onClick={switchModeHandler} className=\"ghost\" id=\"signUp\">Sign Up</button>*/}\n                            {/*            </div>*/}\n                            {/*        </div>*/}\n                            {/*    </div>*/}\n                            {/*</div>*/}\n\n\n\n\n\n                        </div>\n                    </div>\n                )}\n\n            </div>\n        </div>\n    );\n};\n\nAuth.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user,\n    token: state.auth.token\n})\n\n\nexport default connect(mapStateToProps, { login, register, loadUser })(Auth);\n","export const initSwitchLayout = () => {\n    const signUpButton = document.getElementById('signUp');\n    const signInButton = document.getElementById('signIn');\n    const container = document.getElementById('container');\n\n    signUpButton.addEventListener('click', () => {\n        container.classList.add(\"right-panel-active\");\n    });\n\n    signInButton.addEventListener('click', () => {\n        container.classList.remove(\"right-panel-active\");\n    });\n}\n","import M from 'materialize-css';\n\n//when visit new window using history.push if came back previous window then initialization does not works\nexport const initAllModal = () => {\n    let elems = document.querySelectorAll('.modal');\n    M.Modal.init(elems);\n}\n\nexport const initModalAndOpen = (modalId) => {\n    let Modalelem = document.querySelector(modalId);\n    let instance = M.Modal.init(Modalelem);\n    instance.open();\n}\n\nexport const prepareActivityHelper = (responseData) => {\n    let allActivities = [];\n    if(responseData) {\n        responseData.bugs.map(bug => {\n            allActivities.push({\n                time: bug.time,\n                user: bug.user.username,\n                text: bug.text,\n                type: 'bug'\n            })\n            if(bug.fixedAt) {\n                allActivities.push({\n                    time: bug.fixedAt,\n                    user: bug.user.username,\n                    text: bug.text,\n                    type: 'bug-fixed'\n                })\n            }\n        });\n        responseData.todos.map(todo => {\n            allActivities.push({\n                time: todo.time,\n                user: todo.user.username,\n                text: todo.text,\n                type: 'todo'\n            })\n            if(todo.doneAt) {\n                allActivities.push({\n                    time: todo.doneAt,\n                    user: todo.user.username,\n                    text: todo.text,\n                    type: 'todo-done'\n                })\n            }\n        })\n    }\n\n    allActivities.sort(function(a,b){\n        return new Date(b.time) - new Date(a.time);\n    });\n    const modifiedActivities = []; //Grouping discussion, bug, todo by date\n    let currentDate = null, previousDate = null;\n    let sameDateActivities = [];\n\n    allActivities.map(activity => {\n        currentDate = new Date(activity.time).getDate() + '/' + new Date(activity.time).getMonth() + '/' + new Date(activity.time).getFullYear();\n        if(currentDate === previousDate) sameDateActivities.unshift(activity)\n        else {\n            previousDate = currentDate;\n            modifiedActivities.unshift(sameDateActivities);\n            sameDateActivities = [];\n            sameDateActivities.unshift(activity);\n        }\n    })\n    if(sameDateActivities.length > 0)\n        modifiedActivities.unshift(sameDateActivities);\n    let lastArray = []; //As we using unshift most recent date will be at last reversing this and add to lastArray\n    for(let i = 0; i < modifiedActivities.length - 1; i++) {\n        lastArray.unshift(modifiedActivities[i]);\n    }\n\n    //key:data => value(all bug fixed/todo finished and bug appears and todo add at that day)\n    return lastArray;\n}\n","import {\n    ADD_PROJECT,\n    EDIT_PROJECT,\n    GET_PROJECTS,\n    GET_PROJECT,\n    ADD_DISCUSSION,\n    ADD_TODO,\n    ADD_BUG,\n    UPDATE_TODO,\n    UPDATE_BUG,\n    ADD_NOT_ASSIGNED_MEMBER,\n    ADD_MEMBER_AT_PROJECT,\n    ACTIVITY_PREPARED,\n    ADD_WORK_PREVIEW,\n    ADD_IS_MEMBER_AND_CREATOR,\n    DELETE_BUG,\n    DELETE_TODO,\n    DELETE_MEMBER_FROM_PROJECT,\n    PREPARE_DATA_FOR_DASHBOARD,\n    UPDATE_DISCUSSION,\n    DELETE_DISCUSSION\n} from \"./types\";\nimport { prepareActivityHelper } from \"../utils/helper\";\nimport M from \"materialize-css\";\n\n//Add new project\nexport const addProject = (projectName, projectCategory, projectDescription,projectDeadline, method) => async dispatch =>{\n    try {\n         const responseData = await method(\n             process.env.REACT_APP_ASSET_URL +'/api/project',\n             'POST',\n             JSON.stringify({\n                 name: projectName,\n                 category: projectCategory,\n                 description: projectDescription,\n                 deadline: projectDeadline\n             }),\n             {\n                 'Content-Type': 'application/json',\n                 Authorization: 'Bearer ' + localStorage.token\n             }\n         )\n        M.toast({html: 'New Project Added', classes: 'green'});\n        dispatch({\n            type: ADD_PROJECT,\n            payload: responseData\n        })\n    } catch(error) {\n        console.error(error);\n    }\n}\n\n//Edit project EditProjectDetails(name, edit-project-details, category, deadline)\nexport const editProjectDetails = (projectName, projectDetails, projectCategory, projectDeadline, projectId, method) => async dispatch => {\n    try{\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/' + projectId,\n            'PUT',\n            JSON.stringify({\n                name: projectName,\n                category: projectCategory,\n                description: projectDetails,\n                deadline: projectDeadline\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n\n        );\n        M.toast({html: 'Project Details Updated', classes: 'green'});\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\n//Toggle is project done or not\nexport const toggleIsProjectIsFinished = (isDone, projectId, method) => async dispatch => {\n    try {\n        await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/isDone/' + projectId,\n            'PUT',\n            JSON.stringify({\n                isDone\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Project Updated', classes: 'green'});\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Delete an project\nexport const deleteProject = (projectId, method) => async dispatch => {\n    try {\n        await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/' + projectId,\n            'DELETE',\n            null,\n            {\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Project Deleted', classes: 'green'});\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Get all projects\nexport const getAllProjects = (method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project',\n            'GET',\n            null,\n            {\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        dispatch({\n            type: GET_PROJECTS,\n            payload: responseData\n        });\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Add a discussion in a project\nexport const addDiscussion = (discussionText, projectId ,method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/discussion/' + projectId,\n            'POST',\n            JSON.stringify({\n                discussion: discussionText\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'New Discussion Added', classes: 'green'});\n        dispatch({\n            type: ADD_DISCUSSION,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Edit an discussion\nexport const editDiscussion = (projectId, discussionId, discussionEditText, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/discussion/' + projectId + '/' + discussionId,\n            'PUT',\n            JSON.stringify({\n                discussionEditText\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Discussion Updated', classes: 'green'});\n        dispatch({\n            type: UPDATE_DISCUSSION,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Delete a discussion from a project\nexport const deleteDiscussion = (projectId, discussionId, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/discussion/' + projectId + '/' + discussionId,\n            'DELETE',\n            null,\n            {\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Discussion Deleted Successfully', classes: 'green'});\n        dispatch({\n            type: DELETE_DISCUSSION,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Add a todo in a project\nexport const addTodo = (todoText, projectId ,method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/todos/' + projectId,\n            'POST',\n            JSON.stringify({\n                todo: todoText\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'New Todo Added', classes: 'green'});\n        dispatch({\n            type: ADD_TODO,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Mark any todo as done or not done(toggle is done)\nexport const toggleIsDone = (projectId, todoId, isDone, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/todos/' + projectId + '/' + todoId,\n            'POST',\n            JSON.stringify({\n                isDone: isDone\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        if(responseData) {\n            M.toast({html: 'Todo Updated', classes: 'green'});\n            dispatch({\n                type: UPDATE_TODO,\n                payload: responseData\n            })\n        }\n    } catch (error) {\n        // console.error(error);\n    }\n}\n\n//Edit an todo\nexport const editTodo = (projectId, todoId, todoEditText, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/todos/' + projectId + '/' + todoId,\n            'PUT',\n            JSON.stringify({\n                todoEditText\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Todo Updated', classes: 'green'});\n        dispatch({\n            type: UPDATE_TODO,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Delete a todo from a project\nexport const deleteTodo = (projectId, todoId, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/todos/' + projectId + '/' + todoId,\n            'DELETE',\n            null,\n            {\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Todo Deleted', classes: 'green'});\n        dispatch({\n            type: DELETE_TODO,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Mark any bug as fixed or not fixed(toggle isFixed of an bug)\nexport const toggleIsFixed = (projectId, bugId, isFixed, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/bugs/' + projectId + '/' + bugId,\n            'POST',\n            JSON.stringify({\n                isFixed: isFixed\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        if(responseData) {\n            M.toast({ html: 'Bug Updated', classes: 'green' });\n            dispatch({\n                type: UPDATE_BUG,\n                payload: responseData\n            })\n        }\n    } catch (error) {\n        // console.error(error);\n    }\n}\n\n//Edit an bug\nexport const editBug = (projectId, bugId, bugEditText, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/bugs/' + projectId + '/' + bugId,\n            'PUT',\n            JSON.stringify({\n                bugEditText\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Bug Updated', classes: 'green'});\n        dispatch({\n            type: UPDATE_BUG,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Add a bug in a project\nexport const addBug = (bugText, projectId ,method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/bugs/' + projectId,\n            'POST',\n            JSON.stringify({\n                bug: bugText\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'New Bug Added', classes: 'green'});\n        dispatch({\n            type: ADD_BUG,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Delete a bug from a project\nexport const deleteBug = (projectId, bugId, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL +'/api/project/bugs/' + projectId + '/' + bugId,\n            'DELETE',\n            null,\n            {\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Bug Deleted', classes: 'green'});\n        dispatch({\n            type: DELETE_BUG,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n\n//Get all project data\nexport const getProjectById = (projectId, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/' + projectId,\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        dispatch({\n            type: GET_PROJECT,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Get all non assigned member of particular project\nexport const getNotAssignedMember = (projectId, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/user/project/' + projectId,\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        dispatch({\n            type: ADD_NOT_ASSIGNED_MEMBER,\n            payload: responseData\n        });\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Assign / add new member to a project\nexport const assignAnMemberToAProject = (projectId, username,  method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/' + projectId,\n            'POST',\n            JSON.stringify({\n                username\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'New Member Added', classes: 'green'});\n        dispatch({\n            type: ADD_MEMBER_AT_PROJECT,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Delete / remove an member from project\nexport const deleteMemberFromProject = (projectId, username,  method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/member/' + projectId,\n            'DELETE',\n            JSON.stringify({\n                username\n            }),\n            {\n                'Content-Type': 'application/json',\n                Authorization: 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Member Deleted', classes: 'green'});\n        dispatch({\n            type: DELETE_MEMBER_FROM_PROJECT,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Get in member of current project and is current user created this project\nexport const getIsMemberAndCreatorOfProject = (projectId, method) => async dispatch => {\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/memberorcreator/' + projectId,\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        )\n        dispatch({\n            type: ADD_IS_MEMBER_AND_CREATOR,\n            payload: responseData\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Prepare project activities\nexport const prepareActivity = (projectId, method) => async dispatch => {\n    let preparedActivities = []; //All activities as discussion, bug, todo (time, username, text, type)\n    //types are todo, todo-done, bug, bug-fixed\n    try {\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/' + projectId,\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        preparedActivities = prepareActivityHelper(responseData);\n        dispatch({\n            type: ACTIVITY_PREPARED,\n            payload: preparedActivities\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Work done(todo done and bug fixed) preview for project overview page\nexport const prepareWorkDonePreview = (projectId, method) => async dispatch => {\n    try {\n        let preparedActivities = [];\n        const responseData = await method(\n            process.env.REACT_APP_ASSET_URL + '/api/project/' + projectId,\n            'GET',\n            null,\n            {\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        preparedActivities = prepareActivityHelper(responseData);\n        let dataPreview = [\n            ['x', 'Todo done', 'Bug fixed'],\n            [0, 0, 0]\n        ];\n        let finalArrayForChart = [];\n\n        let todo = 0, bug = 0, i = 0;\n        let newDataPreview = [];\n        let preparedActivitiesReverse = preparedActivities.reverse(); //as in activities recent come first we need old to recent\n        if(preparedActivitiesReverse) {\n            preparedActivitiesReverse.map(activity => {\n                todo = 0;\n                bug = 0;\n                activity.map(singleActivity => {\n                    if(singleActivity.type === 'todo-done') todo++;\n                    else if(singleActivity.type === 'bug-fixed') bug++;\n                });\n                if(todo > 0 || bug > 0) {\n                    i++;\n                    newDataPreview.push([i, todo, bug]);\n                }\n            })\n        }\n        finalArrayForChart = dataPreview.concat(newDataPreview);\n        dispatch({\n            type: ADD_WORK_PREVIEW,\n            payload: finalArrayForChart\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n\n//Prepare todo and bug summary of an user for showing in his/her dashboard\nexport const prepareTodoAndBugForPreview = (username, projects) => async dispatch => {\n    let allCompletedActivity = []; //all completedTodoOfAProject and fixed bug(means work finished) of all projects of a member\n    let allNotCompletedActivity = []; //all notCompletedTodoOfAProject and notFixed bug(means remaining work) of all projects of a member\n    let projectName = null;\n    let completedTodoOfAProject = []; //completed todo of a single project of a member\n    let notCompletedTodoOfAProject = []; //not completed todo of a single project of a member\n    let notFixedBugOfAProject = []; //not fixed bug of a single project of a member\n    let fixedBugOfAProject = []; //fixed bug of of a single project of a member\n    let dataPreviewForChart = [\n        ['x', 'Todo done', 'Bug fixed'],\n        [0, 0, 0]\n    ]; //For chart preview in dashboard\n    let finishedActivity = []; //finished todo and fixed bug for chart\n    let type = null, time = null;\n    let completedTodoCount = 0, notCompletedTodoCount = 0, notFixedBugCount = 0, fixedBugCount = 0; //For top four card at dashboard\n    try {\n        projects.map(project => {\n            projectName = project.name;\n            completedTodoOfAProject = [];\n            notCompletedTodoOfAProject = [];\n            notFixedBugOfAProject = [];\n            fixedBugOfAProject = [];\n            if(project.todos) {\n                project.todos.map(todo => {\n                    if(todo.user.username === username) {\n                        if(todo.doneAt) {\n                            type = 'todo-done';\n                            time = todo.doneAt;\n                            finishedActivity.unshift({ type, time })\n                            completedTodoCount++;\n                            completedTodoOfAProject.unshift(todo);\n                        } else {\n                            notCompletedTodoCount++;\n                            notCompletedTodoOfAProject.unshift(todo);\n                        }\n                    }\n                })\n            }\n            if(project.bugs) {\n                project.bugs.map(bug => {\n                    if(bug.user.username === username) {\n                        if(bug.fixedAt) {\n                            type = 'bug-fixed';\n                            time = bug.fixedAt;\n                            finishedActivity.unshift({ type, time })\n                            fixedBugCount++;\n                            fixedBugOfAProject.unshift(bug);\n                        } else {\n                            notFixedBugCount++;\n                            notFixedBugOfAProject.unshift(bug);\n                        }\n                    }\n                })\n            }\n            completedTodoOfAProject = completedTodoOfAProject.reverse();\n            notCompletedTodoOfAProject = notCompletedTodoOfAProject.reverse();\n            fixedBugOfAProject = fixedBugOfAProject.reverse();\n            notFixedBugOfAProject = notFixedBugOfAProject.reverse();\n            if((completedTodoOfAProject.length > 0) || (fixedBugOfAProject.length > 0))\n                allCompletedActivity.unshift( { projectName, completedTodo: completedTodoOfAProject, fixedBug: fixedBugOfAProject } );\n            if((notCompletedTodoOfAProject.length > 0) || (notFixedBugOfAProject.length > 0))\n                allNotCompletedActivity.unshift( { projectName, notCompletedTodo: notCompletedTodoOfAProject, notFixedBug: notFixedBugOfAProject } );\n        })\n        console.log(allCompletedActivity);\n\n        finishedActivity.sort(function(a,b){\n            return new Date(b.time) - new Date(a.time);\n        });\n        let finishedActivityReversed = finishedActivity.reverse();\n        console.log(finishedActivity);\n        let todo = 0, bug = 0, i = 0;\n        let activityForChart = [];\n        if(finishedActivityReversed.length > 0) {\n            let currentDate = new Date(finishedActivityReversed[0].time).getDate() + '/' +\n                new Date(finishedActivityReversed[0].time).getMonth() + '/' +\n                new Date(finishedActivityReversed[0].time).getFullYear();\n\n            let previousDate = new Date(finishedActivityReversed[0].time).getDate() + '/' +\n                new Date(finishedActivityReversed[0].time).getMonth() + '/' +\n                new Date(finishedActivityReversed[0].time).getFullYear();\n\n            finishedActivityReversed.map(activity => {\n                currentDate = new Date(activity.time).getDate() + '/' + new Date(activity.time).getMonth() + '/' + new Date(activity.time).getFullYear();\n                if (currentDate !== previousDate) {\n                    previousDate = currentDate;\n                    if (todo > 0 || bug > 0) {\n                        i++;\n                        activityForChart.unshift([i, todo, bug]);\n                        todo = 0\n                        bug = 0\n                    }\n                }\n                if (activity.type === 'todo-done') todo++;\n                else if (activity.type === 'bug-fixed') bug++;\n            })\n            if(todo > 0 || bug > 0) {\n                activityForChart.unshift([++i, todo, bug]);\n            }\n            activityForChart.reverse();\n        }\n        const finalActivity = dataPreviewForChart.concat(activityForChart);\n        const todoBugSummary = {\n            todoDone: completedTodoCount,\n            todoNotDone: notCompletedTodoCount,\n            fixedBug: fixedBugCount,\n            notFixedBug: notFixedBugCount\n        }\n        dispatch({\n            type: PREPARE_DATA_FOR_DASHBOARD,\n            payload: { chartData: finalActivity, activitySummary: { completedActivity: allCompletedActivity, notCompletedActivity: allNotCompletedActivity }, todoBugSummary }\n        })\n    } catch (error) {\n        console.error(error);\n    }\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Chart } from \"react-google-charts\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { getAllProjects, prepareTodoAndBugForPreview } from \"../../actions/project-action\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport './Dashboard.css';\nimport {loadUser} from \"../../actions/auth-action\";\n\nconst Dashboard = ({ projects, auth, getAllProjects, prepareTodoAndBugForPreview }) => {\n    const { sendRequest } = useHttpClient();\n    const { user, chartData, todoBugSummary, activitySummary, isAuthenticated } = auth;\n\n    // useEffect(() => {\n    //     if(localStorage.token) loadUser(sendRequest());\n    // }, [])\n\n    useEffect(() => {\n        // if(localStorage.getItem('token') && !user) {\n        //     console.log('8989898989898')\n        //     loadUser(sendRequest);\n        // }\n        if(user) getAllProjects(sendRequest);\n    }, [user]);\n\n    useEffect(() => {\n        if(projects && user) prepareTodoAndBugForPreview(user.username, projects);\n        // console.log(user)\n    }, [projects, user]);\n\n    return (\n        <div className=\"main dashboard\">\n            {/*Work summary such as remaining todo, not fixed bug, finished todo, fixed bug count*/}\n            <div className=\"row dashboard__work-summary\">\n                <div className=\"col s6 m3 l3\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title center\">{todoBugSummary && todoBugSummary.todoNotDone}</span>\n                            <p className=\"center\">Remaining</p>\n                            <p className=\"center\">Todo</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col s6 m3 l3\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title center\">{todoBugSummary && todoBugSummary.notFixedBug}</span>\n                            <p className=\"center\">Remaining</p>\n                            <p className=\"center\">Bug</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col s6 m3 l3\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title center\">{todoBugSummary && todoBugSummary.todoDone}</span>\n                            <p className=\"center\">Finished</p>\n                            <p className=\"center\">Todo</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col s6 m3 l3\">\n                    <div className=\"card blue-grey darken-1\">\n                        <div className=\"card-content white-text\">\n                            <span className=\"card-title center\">{todoBugSummary && todoBugSummary.fixedBug}</span>\n                            <p className=\"center\">Fixed</p>\n                            <p className=\"center\">Bug</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            {/*Chart for showing fixed bug and finished todo*/}\n            <div className=\"row s12 dashboard__chart\">\n                {chartData && (\n                    <Chart\n                        width={'100%'}\n                        height={'400px'}\n                        chartType=\"LineChart\"\n                        loader={<div>Loading Chart</div>}\n                        data={chartData}\n                        options={{\n                            hAxis: {\n                                title: 'Todo done and bug fixed',\n                            },\n                            vAxis: {\n                                title: 'Time',\n                            },\n                            series: {\n                                1: { curveType: 'function' },\n                            },\n                        }}\n                        rootProps={{ 'data-testid': '2' }}\n                    />\n                )}\n            </div>\n\n            {(activitySummary && activitySummary.notCompletedActivity.length > 0) && (\n                <div className=\"row white dashboard__work-summary\">\n\n                    {/*Work not finished*/}\n                    <h5>Active Projects</h5>\n                    {activitySummary.notCompletedActivity.map(project => (\n                        <div className=\"project_summary\">\n                            <h6 className=\"project_summary__project-name white-text\">Project name : {project.projectName}</h6>\n                            <div className=\"row\">\n                                <div className=\"col s12 m6 l6\">\n                                    {(project.notCompletedTodo.length > 0) && (\n                                        <table>\n                                            <thead className=\"grey darken-1\">\n                                            <tr>\n                                                <th>Todo have to complete</th>\n                                            </tr>\n                                            </thead>\n\n                                            <tbody>\n                                            {project.notCompletedTodo.map(todo => (\n                                                <tr key={todo._id}>\n                                                    <td key={todo._id}>{todo.text}</td>\n                                                </tr>\n                                            ))}\n                                            </tbody>\n                                        </table>\n                                    )}\n\n                                </div>\n                                <div className=\"col s12 m6 l6\">\n                                    {(project.notFixedBug.length > 0) && (\n                                        <table>\n                                            <thead className=\"red lighten-1\">\n                                            <tr>\n                                                <th>Bug have to fix</th>\n                                            </tr>\n                                            </thead>\n\n                                            <tbody>\n                                            {project.notFixedBug.map(bug => (\n                                                <tr key={bug._id}>\n                                                    <td key={bug._id}>{bug.text}</td>\n                                                </tr>\n                                            ))}\n                                            </tbody>\n                                        </table>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )}\n\n\n            {/*Finished Work*/}\n            {(activitySummary && activitySummary.completedActivity.length > 0) && (\n                <div className=\"row white dashboard__work-summary\">\n                    <h5>Completed Projects</h5>\n                    {activitySummary.completedActivity.map(project => (\n                        <div className=\"project_summary\">\n                            <h6 className=\"project_summary__project-name white-text\">Project Name : {project.projectName}</h6>\n                            <div className=\"row\">\n                                <div className=\"col s12 m6 l6\">\n                                    {(project.completedTodo.length > 0) && (\n                                        <table>\n                                            <thead className=\"grey darken-1\">\n                                            <tr>\n                                                <th>Todo done</th>\n                                            </tr>\n                                            </thead>\n\n                                            <tbody>\n                                            {project.completedTodo.map(todo => (\n                                                <tr key={todo._id}>\n                                                    <td key={todo._id}>{todo.text}</td>\n                                                </tr>\n                                            ))}\n                                            </tbody>\n                                        </table>\n                                    )}\n\n                                </div>\n                                <div className=\"col s12 m6 l6\">\n                                    {(project.fixedBug.length > 0) && (\n                                        <table>\n                                            <thead className=\"red lighten-1\">\n                                            <tr>\n                                                <th>Bug fixed</th>\n                                            </tr>\n                                            </thead>\n\n                                            <tbody>\n                                            {project.fixedBug.map(bug => (\n                                                <tr key={bug._id}>\n                                                    <td key={bug._id}>{bug.text}</td>\n                                                </tr>\n                                            ))}\n                                            </tbody>\n                                        </table>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    projects: state.project.projects,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getAllProjects, prepareTodoAndBugForPreview, loadUser })(Dashboard);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { PropTypes } from \"prop-types\";\n\nimport './ProjectItem.css';\n\nconst ProjectItem = ({ project, noImage, noMember }) => {\n    let history = useHistory();\n\n    const openProject = async () => {\n        await history.push('/project/' + project._id);\n    };\n\n    return (\n        <div className=\"col s12 m6 l4 project_item\">\n            <div className=\"card white\">\n                <div className=\"card-content\" onClick={openProject}>\n                    <p className=\"card-title\">{project.name}</p>\n                    <p className=\"grey-text\">{project.description}</p>\n                    <hr/>\n\n                    {/*Project summary(Total discussion, bugs, todos, members)*/}\n                    <div className=\"summary black-text\">\n                        <div id=\"left\" className=\"col s6\">\n                            <ul>\n                                <li>\n                                    <i className=\"tiny blue-text material-icons\">brightness_1</i>\n                                    { project?.discussion.length } Discussion\n                                </li>\n                                <li>\n                                    <i className=\"tiny red-text material-icons\">brightness_1</i>\n                                    { project?.bugs.length }\n                                    {\n                                        project?.bugs.length > 1\n                                            ? ' Bugs'\n                                            : ' Bug'\n                                    }\n                                </li>\n                            </ul>\n                        </div>\n                        <div id=\"right\" className=\"col s6\">\n                            <ul>\n                                <li>\n                                    <i className=\"tiny red-text text-lighten-2 material-icons\">brightness_1</i>\n                                    { project?.todos.length }\n                                    {\n                                        project?.todos.length > 1\n                                            ? ' Todos'\n                                            : ' Todo'\n                                    }\n                                </li>\n\n                                <li>\n                                    <i className=\"tiny green-text material-icons\">brightness_1</i>\n                                    { project?.members.length }\n                                    {\n                                        project?.members.length > 1\n                                            ? ' Members'\n                                            : ' Member'\n                                    }\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n                {/*Members image*/}\n                <div className=\"card-action\">\n                    <ul className=\"collection\">\n                        {project?.members?.length > 0 && project?.members.map(userItem => (\n                            <li key={userItem?.user?.username} className=\"collection-item avatar\">\n                                {userItem.user && userItem.user.profileImage &&\n                                    <img src={userItem?.user?.profileImage?.imageUrl} alt=\" \" className=\"circle\"/>\n                                }\n                                {userItem.user && !userItem.user.profileImage &&\n                                    <img src={noImage} alt=\" \" className=\"circle\"/>\n                                }\n                            </li>\n                        ))}\n                        {project?.members?.length === 0 && (\n                            <li key=\"88\" className=\"collection-item avatar\">\n                                <img src={noMember} alt=\" \" className=\"circle\"/>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nProjectItem.propTypes = {\n    project: PropTypes.object.isRequired,\n    noImage: PropTypes.string.isRequired,\n    noMember: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n    noImage: state.auth.noImage,\n    noMember: state.auth.noMember\n})\n\nexport default connect(mapStateToProps)(ProjectItem);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { PropTypes } from 'prop-types';\n\nimport { useForm } from \"../../hooks/form-hook\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { addProject, getAllProjects } from \"../../actions/project-action\";\nimport { VALIDATOR_REQUIRE } from \"../../utils/validators\";\nimport Input from \"../shared/FormElements/Input\";\nimport ProjectItem from \"./ProjectItem\";\nimport {initAllModal} from \"../../utils/helper\";\nimport './Projects.css';\n\nconst Projects = ({ addProject, getAllProjects, projects }) => {\n    const { sendRequest } = useHttpClient();\n    const [ selectedProjectType, setSelectedProjectType ] = useState('all');\n    const [ completedProjectCount, setCompletedProjectCount] = useState(0);\n    const [ inCompletedProjectCount, setInCompletedProjectCount] = useState(0);\n\n    useEffect( () => {\n        getAllProjects(sendRequest);\n        initAllModal();\n    }, []);\n\n    useEffect(() => {\n        let done = 0, notDone = 0;\n        if(projects) {\n            projects.map(project => {\n                if(project.isDone) done++;\n                else notDone++;\n            });\n            setCompletedProjectCount(done);\n            setInCompletedProjectCount(notDone);\n        }\n    }, [projects])\n\n    const [ formState, inputHandler ] = useForm(\n        {\n            projectName: {\n                value: '',\n                isValid: false\n            },\n            projectCategory: {\n                value: '',\n                isValid: false\n            },\n            projectDescription: {\n                value: '',\n                isValid: false\n            },\n            projectDeadline: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    const addProjectHandler = async (event) => {\n        event.preventDefault();\n        try {\n            await addProject(formState.inputs.projectName.value, formState.inputs.projectCategory.value,\n                formState.inputs.projectDescription.value, formState.inputs.projectDeadline.value,\n                sendRequest\n            );\n        } catch (error) {}\n    }\n\n    return (\n        <div className=\"main projects\">\n\n            {/*Modal Structure(Add project modal)*/}\n            <div id=\"add-project-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h5>Add New ProjectScreen</h5>\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"projectName\"\n                        type=\"text\"\n                        placeholder=\"Enter ProjectScreen Name\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter project name.\"\n                        onInput={inputHandler}\n                    />\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"projectCategory\"\n                        type=\"text\"\n                        placeholder=\"Enter ProjectScreen Category(Web/Mobile/ML/AI etc)\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter project category.\"\n                        onInput={inputHandler}\n                    />\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"projectDescription\"\n                        type=\"text\"\n                        placeholder=\"Enter ProjectScreen Short Description\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter short project description.\"\n                        onInput={inputHandler}\n                    />\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"projectDeadline\"\n                        type=\"date\"\n                        label=\"ProjectScreen Deadline\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter project deadline.\"\n                        onInput={inputHandler}\n                    />\n                </div>\n                <div className=\"modal-footer\">\n                    <button disabled={!formState.isValid} onClick={addProjectHandler} className=\"modal-close waves-effect waves-green btn-flat\">Add New ProjectScreen</button>\n                </div>\n            </div>\n\n\n            <div className=\"row white\">\n                <h4>Project Management</h4>\n\n                {/*ProjectScreen type selection(as all, active or finished)*/}\n                <div className=\"divider\" />\n                <div className=\"row projects__navigation_row\">\n                    <div className={`project-type-div ${selectedProjectType === 'all' && 'selected'}`}>\n                        <button className=\"project-type-btn\"\n                                onClick={ ()=> {setSelectedProjectType('all')}}\n                        >\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-list-ol\" />\n                        </span>\n                            <span> All</span>\n                            <span className=\"numberCircle\">{projects.length}</span>\n                        </button>\n                    </div>\n                    <div className={`project-type-div ${selectedProjectType === 'incomplete' && 'selected'}`}>\n                        <button className=\"project-type-btn\"\n                                onClick={ ()=> {setSelectedProjectType('incomplete')}}\n                        >\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-clipboard-list\" />\n                        </span>\n                            <span> Active</span>\n                            <span className=\"numberCircle\">{inCompletedProjectCount}</span>\n                        </button>\n                    </div>\n                    <div className={`project-type-div ${selectedProjectType === 'completed' && 'selected'}`}>\n                        <button className=\"project-type-btn\"\n                                onClick={ ()=> {setSelectedProjectType('completed')}}\n                        >\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-list-alt\" />\n                        </span>\n                            <span> Finished</span>\n                            <span className=\"numberCircle\">{completedProjectCount}</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            {/*Modal Trigger(Add project modal)*/}\n            <button data-target=\"add-project-modal\" className=\"btn modal-trigger projects__addProject\">\n                <i className=\"material-icons add_project_btn\">add_circle_outline</i>\n                ADD NEW PROJECT\n            </button>\n\n            {/*ProjectScreen List*/}\n            <div className=\"row projects__showAllProjects\">\n                {selectedProjectType === 'all' && projects && projects.map(project => (\n                    <ProjectItem key={project._id} project={project} type={selectedProjectType}/>\n                ))\n                }\n                {selectedProjectType === 'completed' && projects && projects.map(project => (\n                    project.isDone && (\n                        <ProjectItem key={project._id} project={project} type={selectedProjectType}/>\n                    )\n                ))}\n                {selectedProjectType === 'incomplete' && projects && projects.map(project => (\n                    !project.isDone && (\n                        <ProjectItem key={project._id} project={project} type={selectedProjectType}/>\n                    )\n                ))}\n            </div>\n\n\n        </div>\n    );\n};\n\nProjects.propTypes = {\n    addProject: PropTypes.func.isRequired,\n    getAllProjects: PropTypes.func.isRequired,\n    projects: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n    projects: state.project.projects\n});\n\nexport default connect(mapStateToProps, { addProject, getAllProjects })(Projects);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { getUserByUserName } from \"../../actions/auth-action\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport './Profile.css';\n\nconst Profile = ({ match, loadedUser, getUserByUserName, auth: { user, isAuthenticated} }) => {\n    const history = useHistory();\n    const { sendRequest } = useHttpClient();\n    const [ showUser, setShowUser ] = useState(user);\n    useEffect(() => {\n        // if(!isAuthenticated) history.push('/');\n        if(match.params && match.params.username) {\n            getUserByUserName(match.params.username, sendRequest);\n            setShowUser(loadedUser);\n            console.log(match.params.username);\n        }\n\n    }, []);\n    return (\n        <div className=\"main\">\n        <>\n            <div className=\"row profile\">\n                <img className=\"profile_avatar\"\n                     src= {loadedUser\n                         ? (loadedUser?.profileImage?.imageUrl)\n                         : (user?.profileImage?.imageUrl)\n                     }\n                     alt=\"no image\"/>\n                <h4>\n                    {loadedUser\n                        ? (loadedUser.name)\n                        : (user && user.name)\n                    }\n                </h4>\n                <h6>\n                    {loadedUser\n                        ? (loadedUser.username)\n                        : (user && user.username)\n                    }\n                </h6>\n                <p className=\"lead\">{loadedUser\n                    ? (loadedUser.role)\n                    : (user && user.role)\n                } </p>\n                <p className=\"lead\">{loadedUser\n                    ? (loadedUser.email)\n                    : (user && user.email)\n                } </p>\n                <div className=\"icons\">\n                    {user && user.social && user.social.twitter && (\n                        <a href={user.social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                            <i className=\"fab fa-twitter fa-2x\" />\n                        </a>\n                    )}\n                    {loadedUser\n                        ? (loadedUser && loadedUser.social && loadedUser.social.github && (\n                            <a href={loadedUser.social.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-github fa-2x\" />\n                            </a>\n                        ))\n                        : (user && user.social && user.social.github && (\n                            <a href={user.social.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-github fa-2x\" />\n                            </a>\n                        ))\n                    }\n                    {loadedUser\n                        ? (loadedUser && loadedUser.social && loadedUser.social.facebook && (\n                            <a href={loadedUser.social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-facebook-f fa-2x\" />\n                            </a>\n                        ))\n                        : (user && user.social && user.social.facebook && (\n                            <a href={user.social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-facebook-f fa-2x\" />\n                            </a>\n                        ))\n                    }\n                    {loadedUser\n                        ? (loadedUser && loadedUser.social && loadedUser.social.linkedIn && (\n                            <a href={loadedUser.social.linkedIn} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-linkedin fa-2x\" />\n                            </a>\n                        ))\n                        : (user && user.social && user.social.linkedIn && (\n                            <a href={user.social.linkedIn} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-linkedin fa-2x\" />\n                            </a>\n                        ))\n                    }\n                    {loadedUser\n                        ? (loadedUser && loadedUser.social && loadedUser.social.stackoverflow && (\n                            <a href={loadedUser.social.stackoverflow} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-stack-overflow fa-2x\" />\n                            </a>\n                        ))\n                        : (user && user.social && user.social.stackoverflow && (\n                            <a href={user.social.stackoverflow} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-stack-overflow fa-2x\" />\n                            </a>\n                        ))\n                    }\n                    {loadedUser\n                        ? (loadedUser && loadedUser.social && loadedUser.social.youtube && (\n                            <a href={loadedUser.social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-youtube fa-2x\" />\n                            </a>\n                        ))\n                        : (user && user.social && user.social.youtube && (\n                            <a href={user.social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-youtube fa-2x\" />\n                            </a>\n                        ))\n                    }\n                    {loadedUser\n                        ? (loadedUser && loadedUser.social && loadedUser.social.instagram && (\n                            <a href={loadedUser.social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-instagram fa-2x\" />\n                            </a>\n                        ))\n                        : (user && user.social && user.social.instagram && (\n                            <a href={user.social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-instagram fa-2x\" />\n                            </a>\n                        ))\n                    }\n                </div>\n\n                {loadedUser\n                    ? (loadedUser.bio && (\n                        <div className=\"row profile-bio\">\n                            <h4>{loadedUser && loadedUser.name}'s Bio</h4>\n                            <p>{loadedUser?.bio}</p>\n                        </div>\n                    ))\n                    : (user && user.bio && (\n                        <div className=\"row profile-bio\">\n                            <h4>{user && user.name}'s Bio</h4>\n                            <p>{user.bio}</p>\n                        </div>\n                    ))\n                }\n\n                {loadedUser\n                    ? (loadedUser.skills && loadedUser.skills.length > 0 && (\n                        <div className=\"row profile-skills\">\n                            <h4 >Skill Set</h4>\n                            <div className=\"skills\">\n                                {loadedUser.skills.map((skill, index) => (\n                                    <div key={index} className=\"skill\">\n                                        <i className=\"fas fa-check\" /> {skill}\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    ))\n                    : (user && user.skills && user.skills.length > 0 && (\n                        <div className=\"row profile-skills\">\n                            <h4 >Skill Set</h4>\n                            <div className=\"skills wrapper\">\n                                {user.skills.map((skill, index) => (\n                                    <div key={index} className=\"skill\">\n                                        <i className=\"fas fa-check\" /> {skill}\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    ))\n                }\n\n            </div>\n\n            {/*{loadedUser*/}\n            {/*    ? (loadedUser.bio && (*/}\n            {/*        <div className=\"row profile profile-bio\">*/}\n            {/*            <h4>{loadedUser && loadedUser.name}'s Bio</h4>*/}\n            {/*            <p>{loadedUser?.bio}</p>*/}\n            {/*        </div>*/}\n            {/*    ))*/}\n            {/*    : (user && user.bio && (*/}\n            {/*        <div className=\"row profile profile-bio\">*/}\n            {/*            <h4>{user && user.name}'s Bio</h4>*/}\n            {/*            <p>{user.bio}</p>*/}\n            {/*        </div>*/}\n            {/*    ))*/}\n            {/*}*/}\n\n            {/*{loadedUser*/}\n            {/*    ? (loadedUser.skills && loadedUser.skills.length > 0 && (*/}\n            {/*        <div className=\"row profile profile-skills\">*/}\n            {/*            <h4 >Skill Set</h4>*/}\n            {/*            <div className=\"skills\">*/}\n            {/*                {loadedUser.skills.map((skill, index) => (*/}\n            {/*                    <div key={index} className=\"skill\">*/}\n            {/*                        <i className=\"fas fa-check\" /> {skill}*/}\n            {/*                    </div>*/}\n            {/*                ))}*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    ))*/}\n            {/*    : (user && user.skills && user.skills.length > 0 && (*/}\n            {/*        <div className=\"row profile profile-skills\">*/}\n            {/*            <h4 >Skill Set</h4>*/}\n            {/*            <div className=\"skills wrapper\">*/}\n            {/*                {user.skills.map((skill, index) => (*/}\n            {/*                    <div key={index} className=\"skill\">*/}\n            {/*                        <i className=\"fas fa-check\" /> {skill}*/}\n            {/*                    </div>*/}\n            {/*                ))}*/}\n            {/*            </div>*/}\n            {/*        </div>*/}\n            {/*    ))*/}\n            {/*}*/}\n            {/*<div className=\"bottom-space\" />*/}\n        </>\n\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    loadedUser: state.auth.loadedUser\n})\n\nexport default connect(mapStateToProps, { getUserByUserName })(Profile);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n\n//Unauthorized(not logged in) user can not visit this route\n//{...props=>props of components, component=>component which will be render, {...rest}=>are things are like exact, path etc}\nconst PrivateRoute = ({ component: Component, auth, selectedItem, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={props => !auth.isAuthenticated && !auth.loading ? (\n                <Redirect to=\"/\"/>\n            ) : (\n                <Component selectedItem={selectedItem} {...props}  />\n            )\n            }\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { useEffect, useState } from 'react';\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport { updateUser } from \"../../actions/auth-action\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { useForm } from \"../../hooks/form-hook\";\nimport Input from \"../shared/FormElements/Input\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE,VALIDATOR_EMAIL, VALIDATOR_NOT_REQUIRE } from \"../../utils/validators\";\nimport M from 'materialize-css';\nimport './EditProfile.css';\n\nconst EditProfile = ({ auth: { user, isAuthenticated }, updateUser }) => {\n    const history = useHistory();\n    const [ profileImage, setProfileImage ] = useState(\"\");\n    const [ formState, inputHandler, setFormData ] = useForm();\n    const { sendRequest } = useHttpClient();\n    const [image, setImage] = useState('');\n    const [ loading, setIsLoading ] = useState(false);\n\n    useEffect(  () => {\n        // if(!isAuthenticated) history.push('/');\n        if(user) {\n            setFormData(\n                {\n                    fullName: {\n                        value: user.name,\n                        isValid: true,\n                    },\n                    username: {\n                        value: user.username,\n                        isValid: true\n                    },\n                    email: {\n                        value: user.email,\n                        isValid: true,\n                    },\n                    role: {\n                        value: user.role,\n                        isValid: true\n                    },\n                    bio: {\n                        value: user.bio || null,\n                        isValid: true\n                    },\n                    skills: {\n                        value: user.skills || null,\n                        isValid: true\n                    },\n                    github: {\n                        value: user.social && user.social.github || null,\n                        isValid: true\n                    },\n                    youtube: {\n                        value: user.social && user.social.youtube || null,\n                        isValid: true\n                    },\n                    twitter: {\n                        value: user.social && user.social.twitter || null,\n                        isValid: true\n                    },\n                    facebook: {\n                        value: user.social && user.social.facebook || null,\n                        isValid: true\n                    },\n                    linkedIn: {\n                        value: user.social && user.social.linkedIn || null,\n                        isValid: true\n                    },\n                    instagram: {\n                        value: user.social && user.social.instagram || null,\n                        isValid: true\n                    },\n                    stackoverflow: {\n                        value: user.social && user.social.stackoverflow || null,\n                        isValid: true\n                    },\n                    newPassword: {\n                        value: null,\n                        isValid: true\n                    },\n                    confirmNewPassword: {\n                        value: null,\n                        isValid: true\n                    },\n                    currentPassword: {\n                        value: null,\n                        isValid: false\n                    }\n                },\n                false\n            )\n        }\n        if(user?.profileImage?.imageUrl) {\n            setProfileImage(user.profileImage.imageUrl);\n        }\n    }, [user]);\n\n    const saveProfile = async () => {\n        console.log(formState);\n        if(formState.inputs.newPassword.value !== formState.inputs.confirmNewPassword.value) {\n            M.toast({html: 'Confirm password and Confirm new password have to be same', classes: 'red'});\n        } else {\n            setIsLoading(true);\n            await updateUser(formState, sendRequest);\n            setIsLoading(false);\n            history.push('/profile');\n        }\n    }\n\n    return(\n        <div className=\"main\">\n            {isAuthenticated\n            && (\n                <>\n                    <div className=\"row edit_profile\">\n                        <img\n                            src={profileImage}\n                            alt=\"Add Profile Image\"\n                            className=\"profile_avatar\"\n                        />\n                        <a href=\"/uploadImage\" className=\"btn\">Change Profile Pic</a>\n\n                        {user && (\n                            <div className=\"details\">\n                                <Input\n                                    label=\"Full Name\"\n                                    element=\"input\"\n                                    placeholder=\"Full Name\"\n                                    elementTitle=\"fullName\"\n                                    type=\"text\"\n                                    validators={[VALIDATOR_MINLENGTH(5)]}\n                                    errorText=\"Please enter at least 5 character.\"\n                                    onInput={inputHandler}\n                                    initialValue={user.name}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Username\"\n                                    element=\"input\"\n                                    placeholder=\"Username\"\n                                    elementTitle=\"username\"\n                                    type=\"text\"\n                                    validators={[VALIDATOR_MINLENGTH(5)]}\n                                    errorText=\"Please enter at least 5 character.\"\n                                    onInput={inputHandler}\n                                    initialValue={user.username}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Email\"\n                                    element=\"input\"\n                                    placeholder=\"Email\"\n                                    elementTitle=\"email\"\n                                    type=\"email\"\n                                    validators={[VALIDATOR_EMAIL()]}\n                                    errorText=\"Please enter at least 5 character.\"\n                                    onInput={inputHandler}\n                                    initialValue={user.email}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Role\"\n                                    element=\"input\"\n                                    placeholder=\"Role\"\n                                    elementTitle=\"role\"\n                                    type=\"text\"\n                                    validators={[VALIDATOR_MINLENGTH(2)]}\n                                    errorText=\"Please enter at least 2 character.\"\n                                    onInput={inputHandler}\n                                    initialValue={user.role}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Skills\"\n                                    element=\"input\"\n                                    placeholder=\"Use comma to separate skills such as(HTML, CSS, JavaScript)\"\n                                    elementTitle=\"skills\"\n                                    type=\"text\"\n                                    validators={[VALIDATOR_MINLENGTH(2)]}\n                                    errorText=\"Please enter at least 2 character.\"\n                                    onInput={inputHandler}\n                                    initialValue={user.skills}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Bio\"\n                                    element=\"textarea\"\n                                    placeholder=\"Bio\"\n                                    elementTitle=\"bio\"\n                                    type=\"textarea\"\n                                    validators={[VALIDATOR_MINLENGTH(10)]}\n                                    errorText=\"Please enter at least 10 character.\"\n                                    onInput={inputHandler}\n                                    initialValue={user.bio}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Github\"\n                                    element=\"input\"\n                                    placeholder=\"Github profile url\"\n                                    elementTitle=\"github\"\n                                    type=\"text\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your github profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.social.github}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Twitter\"\n                                    element=\"input\"\n                                    placeholder=\"Twitter profile url\"\n                                    elementTitle=\"twitter\"\n                                    type=\"text\"\n                                    // validators={[VALIDATOR_MINLENGTH(2)]}\n                                    // errorText=\"Please enter at least 2 character.\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your github profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.social.twitter}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Stackoverflow\"\n                                    element=\"input\"\n                                    placeholder=\"Stackoverflow profile url\"\n                                    elementTitle=\"stackoverflow\"\n                                    type=\"text\"\n                                    // validators={[VALIDATOR_MINLENGTH(2)]}\n                                    // errorText=\"Please enter at least 2 character.\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your stackoverflow profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.social.stackoverflow}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Facebook\"\n                                    element=\"input\"\n                                    placeholder=\"Facebook profile url\"\n                                    elementTitle=\"facebook\"\n                                    type=\"text\"\n                                    // validators={[VALIDATOR_MINLENGTH(2)]}\n                                    // errorText=\"Please enter at least 2 character.\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your github profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.facebook}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"LinkedIn\"\n                                    element=\"input\"\n                                    placeholder=\"LinkedIn profile url\"\n                                    elementTitle=\"linkedIn\"\n                                    type=\"text\"\n                                    // validators={[VALIDATOR_MINLENGTH(2)]}\n                                    // errorText=\"Please enter at least 2 character.\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your github profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.social.linkedIn}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Instagram\"\n                                    element=\"input\"\n                                    placeholder=\"Instagram profile url\"\n                                    elementTitle=\"instagram\"\n                                    type=\"text\"\n                                    // validators={[VALIDATOR_MINLENGTH(2)]}\n                                    // errorText=\"Please enter at least 2 character.\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your github profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.social.instagram}\n                                    initialValidity={true}\n                                />\n                                <Input\n                                    label=\"Youtube\"\n                                    element=\"input\"\n                                    placeholder=\"Youtube channel url\"\n                                    elementTitle=\"youtube\"\n                                    type=\"text\"\n                                    // validators={[VALIDATOR_MINLENGTH(2)]}\n                                    // errorText=\"Please enter at least 2 character.\"\n                                    validators={[VALIDATOR_NOT_REQUIRE()]}\n                                    errorText=\"Please enter your github profile link\"\n                                    onInput={inputHandler}\n                                    initialValue={user.social && user.social.youtube}\n                                    initialValidity={true}\n                                />\n\n                                <Input\n                                    label=\"New Password\"\n                                    element=\"input\"\n                                    placeholder=\"New Password\"\n                                    elementTitle=\"newPassword\"\n                                    type=\"password\"\n                                    validators={[VALIDATOR_MINLENGTH(6)]}\n                                    errorText=\"Please enter at least 6 character.\"\n                                    onInput={inputHandler}\n                                />\n                                <Input\n                                    label=\"Confirm New Password\"\n                                    element=\"input\"\n                                    placeholder=\"Confirm New Password\"\n                                    elementTitle=\"confirmNewPassword\"\n                                    type=\"password\"\n                                    validators={[VALIDATOR_MINLENGTH(6)]}\n                                    errorText=\"Please enter at least 6 character.\"\n                                    onInput={inputHandler}\n                                />\n                                <Input\n                                    label=\"Current Password\"\n                                    element=\"input\"\n                                    placeholder=\"Current Password(To save edit)\"\n                                    elementTitle=\"currentPassword\"\n                                    type=\"password\"\n                                    validators={[VALIDATOR_MINLENGTH(6)]}\n                                    errorText=\"Please enter current password.\"\n                                    onInput={inputHandler}\n                                />\n                                {/*<button className=\"waves-effect waves-light blue btn\"*/}\n                                <button className=\"blue btn\"\n                                        onClick={saveProfile}\n                                        disabled={!formState.isValid}\n                                >\n                                  {loading && <i className=\"fas fa-spinner fa-pulse\" />}\n                                  {loading && ' Saving Profile Details'}\n                                  {!loading && 'Save Profile Details'}\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                </>\n            )}\n            {/*{!isAuthenticated && (<Redirect to='/' />)}*/}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { updateUser })(EditProfile);\n","import React from 'react'\nimport { useHistory } from 'react-router-dom';\n\nimport './MemberItem.css';\n\nconst MemberItem = ({ user }) => {\n    let history = useHistory();\n    let clickedOnEmail = false;\n\n    const openMemberDetails = async () => {\n        if(!clickedOnEmail) await history.push('/member/' + user.username);\n        clickedOnEmail = false;\n    }\n\n    const toggleIsClickedOnEmail = () => {\n        clickedOnEmail = !clickedOnEmail;\n    }\n\n    return (\n        <div className=\"col s12 m6 l4 member_item\">\n            <div className=\"card white\">\n                <div className=\"card-content\" onClick={openMemberDetails}>\n                    <img className=\"profile_avatar\"\n                         src={user?.profileImage?.imageUrl}\n                         alt=\"no image\"\n                    />\n                    <p className=\"card-title\">{user.name}</p>\n                    <p className=\"card-username\" onClick={toggleIsClickedOnEmail}>{user.email}</p>\n                    <p className=\"card-role\">{user.role}</p>\n                    <div className=\"social-links\">\n                        {user && user.social && user.social.twitter && (\n                            <a href={user.social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-twitter fa-2x\" />\n                            </a>\n                        )}\n                        {user && user.social && user.social.github && (\n                            <a href={user.social.github} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-github fa-2x\" />\n                            </a>\n                        )}\n                        {user && user.social && user.social.facebook && (\n                            <a href={user.social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-facebook fa-2x\"/>\n                            </a>\n                        )}\n                        {user && user.social && user.social.linkedIn && (\n                            <a href={user.social.linkedIn} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-linkedin fa-2x\" />\n                            </a>\n                        )}\n                        {user && user.social && user.social.stackoverflow && (\n                            <a href={user.social.stackoverflow} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-stack-overflow fa-2x\" />\n                            </a>\n                        )}\n                        {user && user.social && user.social.youtube && (\n                            <a href={user.social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-youtube fa-2x\" />\n                            </a>\n                        )}\n                        {user && user.social && user.social.instagram && (\n                            <a href={user.social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <i className=\"fab fa-instagram fa-2x\" />\n                            </a>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MemberItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAllUser } from \"../../actions/auth-action\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport MemberItem from \"./MemberItem\";\n\nconst Members = ({ auth: { users }, getAllUser }) => {\n    const { sendRequest } = useHttpClient();\n\n    useEffect(() => {\n        getAllUser(sendRequest);\n    }, []);\n\n    return (\n        <div className=\"main\">\n            <div className=\"row memberList\">\n                {users && (\n                    users.map(user => (\n                        <MemberItem key={user.username} user={user}/>\n                    ))\n                )}\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getAllUser })(Members);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\n\nimport { uploadProfileImage } from '../../actions/user-action';\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport M from \"materialize-css\";\nimport './UploadImage.css';\n\nconst UploadImage = ({ uploadProfileImage }) => {\n    const history = useHistory();\n    const { sendRequest } = useHttpClient();\n    const [ fileInputState, setFileInputState ] = useState('');//Image url temporary(for input tag)\n    const [ previewSource, setPreviewSource ] = useState('');//converted normal image to base64EncodedImage format\n    const [ selectedFile, setSelectedFile ] = useState();//for check is any file selected or not before submitting\n    const [ loading, setLoading ] = useState(false);\n\n    const handleFileInputChange = (e) => {\n        const file = e.target.files[0]; //File data with file\n        previewFile(file);\n        setSelectedFile(file);\n        setFileInputState(e.target.value);\n    };\n\n    const previewFile = (file) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            setPreviewSource(reader.result);\n        };\n        reader.onerror = () => {\n            M.toast({html: 'Image upload failed, Please try again', classes: 'red'});\n        };\n    };\n\n    const handleSubmitFile = async (e) => {\n        e.preventDefault();\n        if (!selectedFile) return;\n        await uploadImage(previewSource)\n    };\n\n    const uploadImage = async (base64EncodedImage) => {\n        setLoading(true);\n        await uploadProfileImage(base64EncodedImage, sendRequest);\n        setLoading(false);\n        await history.push('/profile/');\n    };\n\n    return (\n        <div className=\"main uploadImage\">\n            <div className=\"uploadImage__div\">\n                <h4 className=\"title\">Upload an Image</h4>\n                <form onSubmit={handleSubmitFile} className=\"form\">\n                    <input\n                        id=\"fileInput\"\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={handleFileInputChange}\n                        value={fileInputState}\n                        className=\"form-input\"\n                    />\n                    <button className=\"btn\" type=\"submit\">\n                        {loading && <i className=\"fas fa-spinner fa-pulse\" />}\n                        {loading && ' Uploading Image'}\n                        {!loading && 'Submit'}\n                    </button>\n                </form>\n\n                {previewSource && (\n                    <img\n                        className=\"previewImage\"\n                        src={previewSource}\n                        alt=\"chosen\"\n                        style={{ height: '300px' }}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { uploadProfileImage } )(UploadImage);\n","import M from \"materialize-css\";\n\n//Upload or change profile image\nexport const uploadProfileImage = (base64EncodedImage, method) => async dispatch => {\n    try {\n        await method(\n            process.env.REACT_APP_ASSET_URL + '/api/upload',\n            'POST',\n            JSON.stringify({ data: base64EncodedImage }),\n            {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + localStorage.token\n            }\n        );\n        M.toast({html: 'Image uploaded successfully', classes: 'green'});\n    } catch (err) {\n        console.error(err);\n    }\n}\n","import React, {useEffect} from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { getProjectById, getNotAssignedMember } from \"../../../actions/project-action\";\nimport './ProjectSummary.css';\n\nconst ProjectSummary = ({ project, projectId, selectedItem, user, name, description, category, deadline }) => {\n\n    return (\n        <div className=\"row white project-summary\">\n        <>\n            <h4>{name && name}</h4>\n            <h6>{description && description}</h6>\n            <h6>{category && category}</h6>\n            <h6>{deadline && deadline}</h6>\n            <div className=\"divider\" />\n\n            {/*Project Summary Row*/}\n            <div className=\"row project-summary__navigation\">\n                <div className={`project__navigation-button ${selectedItem === 'overview' && 'selected'}`}>\n                    <a href={`/project/${projectId}`}>\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-info\" />\n                        </span>\n                        <span>Overview</span>\n                    </a>\n                </div>\n                <div className={`project__navigation-button ${selectedItem === 'activities' && 'selected'}`}>\n                    <a href={`/activities/${projectId}`}>\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-clipboard-list\" />\n                        </span>\n                        <span>Activities</span>\n                    </a>\n                </div>\n                <div className={`project__navigation-button ${selectedItem === 'discussion' && 'selected'}`}>\n                    <a href={`/discussion/${projectId}`}>\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-comments\" />\n                        </span>\n                        <span>Discussion</span>\n                        <span className=\"numberCircle\">{project && project?.discussion?.length || 0}</span>\n                    </a>\n                </div>\n                <div className={`project__navigation-button ${selectedItem === 'todolist' && 'selected'}`}>\n                    <a href={`/todolist/${projectId}`}>\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-check-circle\" />\n                        </span>\n                        <span>To-Do-List</span>\n                        <span className=\"numberCircle\">{project && project?.todos?.length || 0}</span>\n                    </a>\n                </div>\n                <div className={`project__navigation-button ${selectedItem === 'bugs' && 'selected'}`}>\n                    <a href={`/bugs/${projectId}`}>\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-bug\" />\n                        </span>\n                        <span>Bugs</span>\n                        <span className=\"numberCircle\">{project && project?.bugs?.length || 0}</span>\n                    </a>\n                </div>\n                {project?.createdBy?.username === user?.username && (\n                    <div className={`project__navigation-button ${selectedItem === 'edit-project' && 'selected'}`}>\n                        <a href={`/edit-project/${projectId}`}>\n                        <span className=\"iconCircle\">\n                            <i className=\"fas fa-cog\" />\n                        </span>\n                            <span>Edit</span>\n                        </a>\n                    </div>\n                )}\n            </div>\n        </>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    user: state.auth.user,\n    name: state.project?.project?.name,\n    description: state.project?.project?.description,\n    category: state.project?.project?.category,\n    deadline: state.project?.project?.deadline\n});\n\nexport default connect(mapStateToProps, { getProjectById, getNotAssignedMember })(ProjectSummary);\n","import React  from \"react\";\nimport { connect } from 'react-redux';\n\nimport { deleteMemberFromProject } from \"../../../actions/project-action\";\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport './MemberRow.css';\n\nconst MemberRow = ({ project, member, isCreatedByUser, deleteMemberFromProject, noImage }) => {\n    const { sendRequest } = useHttpClient();\n\n    const removeMember = async () => {\n        if(window.confirm('Do you want to remove this member from project?')) {\n            await deleteMemberFromProject(project._id, member.user.username, sendRequest);\n        }\n    }\n\n    return (\n        <div className=\"row team-member\">\n            <div className=\"col s3 team-member__image\">\n                <img\n                    src={member.user?.profileImage?.imageUrl === undefined\n                        ?  noImage\n                        :  member.user?.profileImage?.imageUrl\n                    }\n                    alt=\" \"\n                    className=\"avatar \"\n                />\n            </div>\n            <div className=\"col s9 team-member__details\">\n                <p className=\"name\">{member.user.username}</p>\n                <p className=\"role\">\n                    {member.user?.role}\n                    {isCreatedByUser && (\n                        <i className=\"material-icons delete_icon\" onClick={removeMember}>delete</i>\n                    )}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    isCreatedByUser: state.project.isCreatedByUser,\n    noImage: state.auth.noImage,\n});\n\nexport default connect(mapStateToProps, { deleteMemberFromProject })(MemberRow);\n","import React, { useEffect, useState } from 'react';\nimport { Chart } from \"react-google-charts\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\n\nimport {useHttpClient} from \"../../../hooks/http-hook\";\nimport {\n    assignAnMemberToAProject,\n    toggleIsProjectIsFinished,\n    getProjectById,\n    deleteProject,\n    getNotAssignedMember\n} from '../../../actions/project-action';\nimport M from 'materialize-css';\nimport MemberRow from './MemberRow';\nimport './Overview.css';\nimport {initAllModal} from \"../../../utils/helper\";\n\nconst Overview = ({ project, assignAnMemberToAProject, chartData, isMemberOfThisProject, isCreatedByUser,\n                      getProjectById, toggleIsProjectIsFinished, isAuthenticated, deleteProject, notAssignMembers,\n                      getNotAssignedMember\n}) => {\n    const { sendRequest } = useHttpClient();\n    const [ addMember, setAddMember ] = useState('');\n    const history = useHistory();\n\n    useEffect(() =>  {\n        let selectList = document.getElementById(\"member_list\");\n        if (notAssignMembers) {\n            notAssignMembers.map(member => {\n                let selectObject = document.createElement(\"option\");\n                selectObject.text = member;\n                selectObject.value = member;\n                selectList.appendChild(selectObject);\n            })\n            M.FormSelect.init(selectList);\n            initAllModal();\n        }\n    }, [notAssignMembers]);\n\n    const handleIsDoneClick = async () => {\n        if(window.confirm(\"Do you want to mark this project as \" + (project?.isDone ? \"Not Done?\" : \"Done?\"))) {\n            await toggleIsProjectIsFinished(!project.isDone , project._id, sendRequest);\n            await getProjectById(project._id, sendRequest);\n        }\n    }\n\n    //get selected member username\n    const handleSetAddMember = async (event) => {\n        await setAddMember(event.target.value);\n        await getNotAssignedMember(project._id, sendRequest);\n    }\n\n    const handleAddMember = async () => {\n        let selectList = document.getElementById(\"member_list\");\n        if(selectList.options.length > 1) {\n            let i, length = selectList.options.length - 1;\n            for(i = length; i > 0; i--) {\n                selectList.remove(i);\n            }\n        }\n        await assignAnMemberToAProject(project._id, addMember ,sendRequest);\n        await getNotAssignedMember(project._id, sendRequest);\n    }\n\n    const handleProjectDelete = async () => {\n        if(window.confirm(\"Do you want to delete this project? There is no recovery method!!\")) {\n            await deleteProject(project._id, sendRequest);\n            history.push('/projects');\n        }\n    }\n\n    return (\n        <div className=\"row overview\">\n\n            {/* Modal Structure of Add Member */}\n            <div id=\"add-member-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h5>Add member to this project</h5>\n                    <label>\n                        Select an member\n                        <select id=\"member_list\" value={addMember} onChange={handleSetAddMember}>\n                            <option selected defaultValue = '' />\n                        </select>\n                    </label>\n                </div>\n                <div className=\"modal-footer\">\n                    <button className=\"modal-close waves-effect btn-flat\"\n                            onClick={handleAddMember}>Add Member</button>\n                </div>\n            </div>\n\n            {isAuthenticated && (\n                <>\n                    <div className=\" row overview__showChartAndMember\">\n                        <div className={\n                            (isCreatedByUser || isMemberOfThisProject)\n                                ? \"col s12 m12 l10 chart\"\n                                : \"col s12 m12 l12 chart\"\n                        }\n                        >\n                            {/*Todo done and bug fixed summary chart*/}\n                            <Chart\n                                width={'100%'}\n                                height={'400px'}\n                                chartType=\"LineChart\"\n                                loader={<div>Loading Chart</div>}\n                                data={chartData}\n                                options={{\n                                    hAxis: {\n                                        title: 'Todo done and bug fixed',\n                                    },\n                                    vAxis: {\n                                        title: 'Time',\n                                    },\n                                    series: {\n                                        1: { curveType: 'function' },\n                                    },\n                                }}\n                                rootProps={{ 'data-testid': '2' }}\n                            />\n                        </div>\n\n\n                        {(isCreatedByUser || isMemberOfThisProject) && (\n                            <div className=\"col s5 m5 l2 member\">\n                                {isCreatedByUser && (\n                                    <div className=\"row member__add-member\">\n                                        <div className=\"col s12\">\n                                            <button data-target=\"add-member-modal\" className=\"light-blue lighten-1 modal-trigger add-btn\">\n                                                <i className=\"fas fa-plus-circle\" />    ADD MEMBER\n                                            </button>\n                                        </div>\n                                    </div>\n                                )}\n\n                                {/*Member list of this project*/}\n                                {project && (project.members.length > 0) && (\n                                    <div className=\"member__team-member white row\">\n                                        <p>Team Members</p>\n                                        <div className=\"divider\"/>\n                                        {project.members.map(member => (\n                                            <MemberRow key={member._id} member={member}/>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </div>\n\n                    {/*Mark as done or not done button*/}\n                    {isCreatedByUser && (\n                        <>\n                            <button className=\"overview__project-done green accent-4 add-btn\" onClick={handleIsDoneClick}>Mark Project as\n                                {project?.isDone\n                                    ? ' Not Done'\n                                    : ' Done'\n                                }\n                            </button>\n\n                            <button className=\"overview__project-delete red lighten-1 add-btn\" onClick={handleProjectDelete}\n                            >Delete Project</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    chartData: state.project.chartData,\n    isCreatedByUser: state.project.isCreatedByUser,\n    isMemberOfThisProject: state.project.isMemberOfThisProject,\n    isAuthenticated: state.auth.isAuthenticated,\n    notAssignMembers: state.project?.project?.notAssignMembers\n});\n\nexport default connect(mapStateToProps, { assignAnMemberToAProject, toggleIsProjectIsFinished, getProjectById,\n    deleteProject, getNotAssignedMember })(Overview);\n","import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { deleteDiscussion } from \"../../../actions/project-action\";\nimport './DiscussionRow.css';\n\nconst DiscussionRow = ({ discussion, username, handleClickOnEdit, projectId, deleteDiscussion }) => {\n    const { sendRequest } = useHttpClient();\n    const [ isMobile, setIsMobile ] = useState(false);\n\n    const handleEditClick = async () => {\n        await handleClickOnEdit(discussion._id, discussion.text);\n    }\n\n    const handleDeleteClick = async () => {\n        if(window.confirm('Do you want to delete this discussion?')) {\n            await deleteDiscussion(projectId, discussion._id, sendRequest);\n        }\n    }\n\n    useEffect(() => {\n        if (/Mobi/.test(navigator.userAgent))\n            setIsMobile(true);\n    }, [])\n\n    return (\n        <div className={`row white discussion-row ${isMobile ? '' : 'showEditDeleteOnHover'}`} id=\"discussion-row\">\n            <div className=\"col s1 discussion-row__image\">\n                <img\n                    src={discussion?.user?.profileImage?.imageUrl}\n                    alt=\" \"\n                    className=\"avatar \"\n                />\n            </div>\n            <div className=\"col s11 discussion-row__text\">\n                <p>{discussion.text}</p>\n                <p>by\n                    <a href={`/member/${discussion.user.username}`}> {discussion.user.username}</a>\n                    {username && (username === discussion.user.username) && (\n                        <>\n                            <span id='edit' className={`edit ${isMobile ? 'showEdit' : ''}`} onClick={handleEditClick}>Edit</span>\n                            <span id='delete' className={`delete ${isMobile ? 'showDelete' : ''}`} onClick={handleDeleteClick}>Delete</span>\n                        </>\n                    )}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    username: state.auth?.user?.username\n})\n\nexport default connect(mapStateToProps, { deleteDiscussion })(DiscussionRow);\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { useForm } from \"../../../hooks/form-hook\";\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { addDiscussion, editDiscussion } from \"../../../actions/project-action\";\nimport DiscussionRow from \"./DiscussionRow\";\nimport Input from \"../../shared/FormElements/Input\";\nimport { VALIDATOR_REQUIRE } from \"../../../utils/validators\";\nimport M from \"materialize-css\";\nimport {initModalAndOpen} from \"../../../utils/helper\";\n\nconst Discussion = ({ project, addDiscussion, editDiscussion, isMemberOfThisProject, isCreatedByUser, isAuthenticated }) => {\n    const { sendRequest } = useHttpClient();\n    const projectId = useParams().projectId;\n    const [ editDiscussionText, setEditDiscussionText ] = useState('');\n    const [ discussionId, setDiscussionId ] = useState();\n\n    const [ formState, inputHandler, setFormData ] = useForm(\n        {\n            discussionText: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    //initialization(set discussionText to '' and validation to false)\n    const setAddDiscussionData = async () => {\n        await setFormData(\n            {\n                discussionText: {\n                    value: '',\n                    isValid: false\n                }\n            },\n            false\n        );\n        document.getElementById(\"discussionText\").value = '';\n    }\n\n    const addDiscussionHandler = async (event) => {\n        event.preventDefault();\n        try {\n            await addDiscussion(formState.inputs.discussionText.value, projectId, sendRequest);\n            await setAddDiscussionData();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const editDiscussionHandler = async (event) => {\n        await editDiscussion(project._id, discussionId, formState.inputs.discussionEditText.value, sendRequest);\n        await setAddDiscussionData();\n    }\n\n    const initEditDiscussionData = async (discussionText) => {\n        await setEditDiscussionText(discussionText);\n        await setFormData(\n            {\n                discussionEditText: {\n                    value: discussionText,\n                    isValid: true\n                }\n            },\n            true\n        )\n    }\n\n    const handleClickOnEdit = async (discussionId, discussionText) => {\n        await initEditDiscussionData(discussionText);\n        await setDiscussionId(discussionId);\n        document.getElementById(\"discussionEditText\").value = discussionText;\n        initModalAndOpen('#edit-discussion-modal')\n    }\n\n    return (\n        <div className=\"row discussion\">\n            {/*Add discussion Modal Structure*/}\n            <div id=\"add-discussion-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h5>Add New Discussion</h5>\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"discussionText\"\n                        type=\"text\"\n                        placeholder=\"Enter Discussion\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter discussion text.\"\n                        onInput={inputHandler}\n                    />\n                </div>\n                <div className=\"modal-footer\">\n                    <button disabled={!formState.isValid} onClick={addDiscussionHandler} className=\"modal-close waves-effect waves-light btn-flat\">Add New Project</button>\n                </div>\n            </div>\n\n            {/*Edit Discussion Modal*/}\n            <div id=\"edit-discussion-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h5>Edit Discussion</h5>\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"discussionEditText\"\n                        type=\"text\"\n                        placeholder=\"Enter a discussion\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter discussion text.\"\n                        onInput={inputHandler}\n                        initialValue={editDiscussionText}\n                        initialValidity={true}\n                    />\n                </div>\n                <div className=\"modal-footer\">\n                    <button onClick={editDiscussionHandler}\n                            disabled={!formState.isValid}  className=\"modal-close waves-effect waves-light btn-flat\">Edit Discussion</button>\n                </div>\n            </div>\n\n            <>\n                {/*Add Discussion Modal Button*/}\n                {(isMemberOfThisProject || isCreatedByUser) && (\n                    <button data-target=\"add-discussion-modal\" className=\"light-blue lighten-1 modal-trigger add-btn\">\n                    <i className=\"fas fa-plus-circle\" />      ADD NEW DISCUSSION\n                    </button>\n                )}\n\n                <h5>Discussion List</h5>\n                {project && project.discussion && project.discussion.map(discussion => (\n                    <DiscussionRow key={discussion._id}\n                        discussion={discussion}\n                        handleClickOnEdit={handleClickOnEdit}\n                        projectId={projectId}\n                />\n                ))}\n            </>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    isMemberOfThisProject: state.project.isMemberOfThisProject,\n    isCreatedByUser: state.project.isCreatedByUser,\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { addDiscussion, editDiscussion })(Discussion);\n","import React from \"react\";\n\nimport './ActivityDetailsRow.css';\n\nconst ActivityDetailsRow = ({ activityDetail }) => {\n     let type;\n     if(activityDetail.type === 'todo') type = 'Todo added ';\n     if(activityDetail.type === 'todo-done') type = 'Todo done ';\n     else if(activityDetail.type === 'bug') type = 'Bug appear ';\n     else if(activityDetail.type === 'bug-fixed') type = 'Bug fixed ';\n     else if(activityDetail.type === 'discuss') type = 'Discussion added ';\n\n    return (\n        <div className=\"col s12 m11 l11 activity_details_row\">\n            <div className=\"activity_details_row__div white\">\n                <p>\n                    <span className={\n                        `${((type === 'Todo done ' || type === 'Bug fixed ') && 'green-text') \n                           || ((type === 'Bug appear ') && 'red-text')\n                           || ((type === 'Todo added ') && 'purple-text')\n                           }`\n                        }>{type}\n                    </span>\n                    {activityDetail.text + \" \"}\n                    by {\" \"}\n                    <a href={`/member/${activityDetail.user}`}>{activityDetail.user}</a>\n                    {\" \"}\n                    {/*at - {new Date(activityDetail.time).getHours()}:{new Date(activityDetail.time).getMinutes()}*/}\n                    at - {new Date(activityDetail.time).toUTCString()}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default ActivityDetailsRow;\n","import React from 'react';\n\nimport ActivityDetailsRow from \"./ActivityDetailsRow\";\nimport './ActivityRow.css'\n\nconst ActivityRow = ({ activity }) => {\n    const day = new Date(activity[0].time).getDate();\n    const month = new Date(activity[0].time).getMonth() + 1;\n    const year = new Date(activity[0].time).getFullYear();\n\n    return (\n        <div className=\"row activity\">\n            {/*Date section*/}\n            <div className=\"col s12 m1 l1 time_section white\">\n                <p className=\"date\">{day}</p>\n                <p className=\"month\">{month}</p>\n                <p className=\"year\">{year}</p>\n            </div>\n            {/*Activity of current date*/}\n            {activity.map(activityDetail => (\n                <ActivityDetailsRow activityDetail={activityDetail} />\n            ))}\n        </div>\n    )\n}\n\nexport default ActivityRow;\n","import React  from 'react';\nimport { connect } from 'react-redux';\n\nimport { prepareActivity } from \"../../../actions/project-action\";\nimport ActivityRow from \"./ActivityRow\";\n\nconst ActivitiesScreen = ({ activities }) => {\n    return (\n        <>\n            {/*ActivitiesScreen Row*/}\n            {activities && activities.map(activity => (\n                <ActivityRow activity={activity} key={new Date(activity[0].time).getDate()}/>\n            ))}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    activities: state.project.activities\n})\n\nexport default connect(mapStateToProps, { prepareActivity })(ActivitiesScreen);\n\n//As while not logged in activities of project state will be null nothing will show for that\n","import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport { useForm } from \"../../../hooks/form-hook\";\nimport { editProjectDetails, getProjectById } from \"../../../actions/project-action\";\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../../utils/validators\";\nimport Input from \"../../shared/FormElements/Input\";\nimport './EditProjectDetails.css';\n\nconst EditProjectDetails = ({ project, editProjectDetails, isAuthenticated, getProjectById }) => {\n    const { sendRequest } = useHttpClient();\n    const [ loading, setIsLoading ] = useState(false);\n    const [ formState, inputHandler, setFormData ] = useForm(\n        {\n            projectName: {\n                value: '',\n                isValid: false,\n            },\n            projectDetails: {\n                value: '',\n                isValid: false\n            },\n            projectCategory: {\n                value: '',\n                isValid: false,\n            },\n            projectDeadline: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    useEffect(  () => {\n        if(project) {\n            setFormData(\n                {\n                    projectName: {\n                        value: project.name,\n                        isValid: true,\n                    },\n                    projectDetails: {\n                        value: project.description,\n                        isValid: true\n                    },\n                    projectCategory: {\n                        value: project.category,\n                        isValid: true,\n                    },\n                    projectDeadline: {\n                        value: project.deadline,\n                        isValid: true\n                    }\n                },\n                true\n            )\n        }\n    }, [project]);\n\n    const saveProjectDetails = async() => {\n        setIsLoading(true);\n        await editProjectDetails(formState.inputs.projectName.value, formState.inputs.projectDetails.value,\n            formState.inputs.projectCategory.value, formState.inputs.projectDeadline.value, project._id, sendRequest);\n        await getProjectById(project._id, sendRequest);\n        setIsLoading(false);\n    }\n\n    return (\n            <div className=\"row white\">\n\n                {project && isAuthenticated && (\n                    <div className=\"project_details\">\n                        <Input\n                            label=\"ProjectScreen Name\"\n                            element=\"input\"\n                            placeholder=\"ProjectScreen Name\"\n                            elementTitle=\"projectName\"\n                            type=\"text\"\n                            validators={[VALIDATOR_MINLENGTH(5)]}\n                            errorText=\"Please enter at least 5 character.\"\n                            onInput={inputHandler}\n                            initialValue={project.name}\n                            initialValidity={true}\n                        />\n                        <Input\n                            label=\"ProjectScreen Details\"\n                            element=\"textarea\"\n                            placeholder=\"ProjectScreen Details\"\n                            elementTitle=\"projectDetails\"\n                            type=\"text\"\n                            validators={[VALIDATOR_MINLENGTH(5)]}\n                            errorText=\"Please enter at least 5 character.\"\n                            onInput={inputHandler}\n                            initialValue={project.description}\n                            initialValidity={true}\n                        />\n                        <Input\n                            label=\"ProjectScreen Category\"\n                            element=\"input\"\n                            placeholder=\"ProjectScreen Category\"\n                            elementTitle=\"projectCategory\"\n                            type=\"text\"\n                            validators={[VALIDATOR_MINLENGTH(2)]}\n                            errorText=\"Please enter at least 2 character.\"\n                            onInput={inputHandler}\n                            initialValue={project.category}\n                            initialValidity={true}\n                        />\n                        <Input\n                            element=\"input\"\n                            elementTitle=\"projectDeadline\"\n                            type=\"date\"\n                            label=\"ProjectScreen Deadline\"\n                            validators={[VALIDATOR_REQUIRE()]}\n                            errorText=\"Please enter project deadline.\"\n                            onInput={inputHandler}\n                            initialValue={project.deadline}\n                            initialValidity={true}\n                        />\n                        <a className=\"waves-effect btn\"\n                           onClick={saveProjectDetails}>\n                           {loading && <i className=\"fas fa-spinner fa-pulse\" />}\n                           {loading && ' Saving Project Details'}\n                           {!loading && 'Save Project Details'}\n                        </a>\n                    </div>\n                )}\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { editProjectDetails, getProjectById })(EditProjectDetails);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleIsDone, deleteTodo } from \"../../../actions/project-action\";\nimport { useHttpClient } from \"../../../hooks/http-hook\";\n\nconst IncompleteTodoRow = ({ todo, projectId, toggleIsDone, username, deleteTodo, handleClickOnEdit }) => {\n    const { sendRequest } = useHttpClient();\n    const [ isMobile, setIsMobile ] = useState(false);\n    let clicked = false; //is clicked on edit or delete\n\n    const handleTodoDone = async () => {\n        if(!clicked) {\n            await toggleIsDone(projectId, todo._id, 'true', sendRequest);\n        }\n        clicked = false;\n    }\n\n    const handleEdit = () => {\n        clicked = true;\n        handleClickOnEdit(todo._id, todo.text);\n    }\n\n    const handleDelete = async () => {\n        clicked = true;\n        if(window.confirm('Do you want to delete this todo?')) {\n            await deleteTodo(projectId, todo._id, sendRequest);\n        }\n    }\n\n    useEffect(() => {\n        if (/Mobi/.test(navigator.userAgent))\n            setIsMobile(true);\n    }, [])\n\n    return (\n        <>\n             {!todo.done && (\n             <div className={`white col s12 incomplete-todo ${isMobile ? '' : 'showEditDeleteOnHover'}`} onClick={handleTodoDone}>\n                     <p className=\"incomplete-todo__text\">{todo.text}</p>\n                     <img\n                         src={todo.user?.profileImage?.imageUrl}\n                         alt=\" \"\n                        className=\"avatar \"\n                     />\n                 {username && (username === todo.user.username) && (\n                     <>\n                         <p id='edit' className={`edit ${isMobile ? 'showEdit' : ''}`} onClick={handleEdit}>Edit</p>\n                         <p id='delete' className={`delete ${isMobile ? 'showDelete' : ''}`} onClick={handleDelete}>Delete</p>\n                     </>\n                 )}\n             </div>\n             )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    username: state.auth?.user?.username\n})\n\nexport default connect(mapStateToProps, { toggleIsDone, deleteTodo })(IncompleteTodoRow);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleIsDone } from \"../../../actions/project-action\";\nimport {useHttpClient} from \"../../../hooks/http-hook\";\n\nconst CompletedTodoRow = ({ todo, projectId, toggleIsDone }) => {\n    const { sendRequest } = useHttpClient();\n\n    const handleToggleIsDone = async () => {\n        await toggleIsDone(projectId, todo._id, 'false', sendRequest);\n    }\n    return (\n        <>\n             {todo.done && (\n             <div className=\"white col s12 completed-todo\" onClick={handleToggleIsDone}>\n                     <p className=\"completed-todo__text\">{todo.text}</p>\n                     <img\n                         src={todo.user?.profileImage?.imageUrl}\n                         alt=\" \"\n                        className=\"avatar \"\n                     />\n             </div>\n             )}\n        </>\n    )\n}\n\nexport default connect(null, { toggleIsDone })(CompletedTodoRow);\n","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { addTodo, editTodo } from \"../../../actions/project-action\";\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { useForm } from \"../../../hooks/form-hook\";\nimport { VALIDATOR_REQUIRE } from \"../../../utils/validators\";\nimport Input from \"../../shared/FormElements/Input\";\nimport IncompleteTodoRow from \"./IncompleteTodoRow\";\nimport CompletedTodoRow from \"./CompletedTodoRow\";\nimport M from \"materialize-css\";\nimport {initAllModal, initModalAndOpen} from \"../../../utils/helper\";\n\nconst Todos = ({ addTodo, project, editTodo, isMemberOfThisProject, isCreatedByUser, isAuthenticated }) => {\n    const { sendRequest } = useHttpClient();\n    const projectId = useParams().projectId;\n    const [ editTodoText, setEditTodoText ] = useState('');\n    const [ todoId, setTodoId ] = useState();\n\n    const [ formState, inputHandler, setFormData ] = useForm(\n        {\n            todoText: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    //initialization:(set todotext '' and validation to false)\n    const initAddTodoData = async () => {\n        await setFormData(\n            {\n                todoText: {\n                    value: '',\n                    isValid: false\n                }\n            },\n            false\n        );\n        document.getElementById(\"todoText\").value = '';\n    }\n\n    const addTodoHandler = async (event) => {\n        event.preventDefault();\n        try {\n            await addTodo(formState.inputs.todoText.value, projectId, sendRequest);\n            await initAddTodoData();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const editTodoHandler = async (event) => {\n        await editTodo(project._id, todoId, formState.inputs.todoEditText.value, sendRequest);\n        await initAddTodoData();\n    }\n\n    const setEditTodoData = async (todoText) => {\n        await initAddTodoData();\n        await setEditTodoText(todoText);\n        await setFormData(\n            {\n                todoEditText: {\n                    value: todoText,\n                    isValid: true\n                }\n            },\n            true\n        )\n    }\n\n    const handleClickOnEdit = async (todoId, todoText) => {\n        await setEditTodoData(todoText);\n        await setTodoId(todoId);\n        document.getElementById(\"todoEditText\").value = todoText;\n        initModalAndOpen('#edit-todo-modal');\n        document.getElementById(\"todoEditText\").value = todoText;\n    }\n\n    return (\n        <div className=\"row todos\">\n            {/*Add todo modal structure*/}\n            <div id=\"add-todo-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h5>Add New Todos</h5>\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"todoText\"\n                        type=\"text\"\n                        placeholder=\"Enter A Todos\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter todo text.\"\n                        onInput={inputHandler}\n                    />\n                </div>\n                <div className=\"modal-footer\">\n                    <button disabled={!formState.isValid} onClick={addTodoHandler} className=\"modal-close waves-effect btn-flat\">Add New Todos</button>\n                </div>\n            </div>\n\n            {/*Edit todo modal structure*/}\n            <div id=\"edit-todo-modal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <h5>Edit Bug</h5>\n                    <Input\n                        element=\"input\"\n                        elementTitle=\"todoEditText\"\n                        type=\"text\"\n                        placeholder=\"Enter A Todos\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter todo text.\"\n                        onInput={inputHandler}\n                        initialValue={editTodoText}\n                        initialValidity={true}\n                    />\n                </div>\n                <div className=\"modal-footer\">\n                    <button onClick={editTodoHandler}\n                            disabled={!formState.isValid}  className=\"modal-close waves-effect waves-light btn-flat\">Edit Todos</button>\n                </div>\n            </div>\n\n            {isAuthenticated && (\n                <>\n                    {/*Add todo modal trigger button */}\n                    {(isMemberOfThisProject || isCreatedByUser) && (\n                        <button data-target=\"add-todo-modal\" className=\"light-blue lighten-1 modal-trigger add-btn\">\n                            <i className=\"fas fa-plus-circle\"/>      ADD NEW TODO\n                        </button>\n                    )}\n\n                    <h5>Incomplete ToDo List</h5>\n                    <div>\n                        {project && project.todos && project?.todos.map(todo => (\n                            <IncompleteTodoRow key={todo._id} todo={todo} projectId={projectId} handleClickOnEdit={handleClickOnEdit}/>\n                        ))\n                        }\n                    </div>\n\n                    <h5>Completed ToDo List</h5>\n                    <div>\n                        {project && project.todos && project?.todos.map(todo => (\n                            <CompletedTodoRow key={todo._id} todo={todo} projectId={projectId}/>\n                            ))\n                        }\n                    </div>\n                </>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    isMemberOfThisProject: state.project.isMemberOfThisProject,\n    isCreatedByUser: state.project.isCreatedByUser,\n    isAuthenticated: state.auth.isAuthenticated\n\n});\n\nexport default connect(mapStateToProps, { addTodo, editTodo })(Todos);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from \"react-redux\";\n\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { toggleIsFixed, deleteBug} from \"../../../actions/project-action\";\n\nconst NotFixedBugRow = ({username, bug, projectId, toggleIsFixed, deleteBug, handleClickOnEdit, noImage }) => {\n    const { sendRequest } = useHttpClient();\n    const [ isMobile, setIsMobile ] = useState(false);\n    let clicked = false;\n\n    const handleIsFixed = async () => {\n        if(!clicked) {\n            await toggleIsFixed(projectId, bug._id, 'true', sendRequest);\n        }\n        clicked = false;\n    }\n\n    const handleEditClick = () => {\n        clicked = true;\n        handleClickOnEdit(bug._id, bug.text);\n    }\n\n    const handleDeleteClick = async () => {\n        clicked = true;\n        await deleteBug(projectId, bug._id, sendRequest);\n    }\n\n    useEffect(() => {\n        if (/Mobi/.test(navigator.userAgent))\n            setIsMobile(true);\n    }, [])\n\n    return (\n        <>\n            {!bug.fixed && (\n                <div className={`white col s12 not-fixed-bug ${isMobile ? '' : 'showEditDeleteOnHover'}`} onClick={handleIsFixed}>\n                    <p className=\"not-fixed-bug__text\">{bug.text}</p>\n                    <img\n                        src = {\n                            bug.user?.profileImage?.imageUrl === undefined\n                                ? noImage\n                                : bug.user?.profileImage?.imageUrl\n                        }\n                        alt=\" \"\n                        className=\"avatar\"\n                    />\n                    {/*If current user add this bug then edit and delete will be appears while hover*/}\n                    {username && (username === bug.user.username) && (\n                        <>\n                            <p id='edit' className={`edit ${isMobile ? 'showEdit' : ''}`} onClick={handleEditClick}>Edit</p>\n                            <p id='delete' className={`delete ${isMobile ? 'showDelete' : ''}`} onClick={handleDeleteClick}>Delete</p>\n                        </>\n                    )}\n                </div>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    username: state?.auth?.user?.username,\n    noImage: state.auth.noImage\n})\n\nexport default connect(mapStateToProps, { toggleIsFixed, deleteBug })(NotFixedBugRow);\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { toggleIsFixed } from \"../../../actions/project-action\";\n\nconst FixedBugRow = ({ bug, projectId, toggleIsFixed, noImage }) => {\n    const { sendRequest } = useHttpClient();\n\n    const handleIsFixed = async () => {\n        await toggleIsFixed(projectId, bug._id, 'false', sendRequest);\n    }\n\n    return (\n        <>\n            {bug.fixed && (\n                <div className=\"white col s12 fixed-bug\" onClick={handleIsFixed}>\n                    <p className=\"fixed-bug__text\">{bug.text}</p>\n                    <img\n                        src = {\n                            bug.user?.profileImage?.imageUrl === undefined\n                            ? noImage\n                            : bug.user?.profileImage?.imageUrl\n                        }\n                        alt=\" \"\n                        className=\"avatar\"\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    noImage: state.auth.noImage\n});\n\nexport default connect(mapStateToProps, { toggleIsFixed })(FixedBugRow);\n","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useHttpClient } from \"../../../hooks/http-hook\";\nimport { useForm } from \"../../../hooks/form-hook\";\nimport { addBug, editBug } from \"../../../actions/project-action\";\nimport { VALIDATOR_REQUIRE } from \"../../../utils/validators\";\nimport {initAllModal, initModalAndOpen} from \"../../../utils/helper\";\nimport Input from \"../../shared/FormElements/Input\";\nimport NotFixedBugRow from \"./NotFixedBugRow\";\nimport FixedBugRow from \"./FixedBugRow\";\nimport M from 'materialize-css';\n\nconst Bugs = ({ project, addBug, editBug, isMemberOfThisProject, isCreatedByUser, isAuthenticated }) => {\n    const { sendRequest } = useHttpClient();\n    const projectId = useParams().projectId;\n    const [ editBugText, setEditBugText ] = useState('');\n    const [ bugId, setBugId ] = useState();\n\n    const [ formState, inputHandler, setFormData ] = useForm(\n        {\n            bugText: {\n                value: '',\n                isValid: false\n            }\n        },\n        false\n    );\n\n    //initialization(bugText is ''\n    const setAddBugData = async () => {\n        await setFormData(\n            {\n                bugText: {\n                    value: '',\n                    isValid: false\n                }\n            },\n            false\n        );\n        document.getElementById(\"bugText\").value = '';\n    }\n\n    const addBugHandler = async (event) => {\n        try {\n            await addBug(formState.inputs.bugText.value, projectId, sendRequest);\n        } catch (error) {\n            console.error(error);\n        }\n        await setAddBugData();\n    }\n\n    const editBugHandler = async (event) => {\n        await editBug(project._id, bugId, formState.inputs.bugEditText.value, sendRequest);\n        await setAddBugData();\n    }\n\n    const setEditBugData = async (bugText) => {\n        await setEditBugText(bugText);\n        await setFormData(\n            {\n                bugEditText: {\n                    value: bugText,\n                    isValid: true\n                }\n            },\n            true\n        )\n    }\n\n    const handleClickOnEdit = async (bugId, bugText) => {\n        await setEditBugData(bugText);\n        await setBugId(bugId);\n        document.getElementById(\"bugEditText\").value = bugText;\n        initAllModal();\n        initModalAndOpen('#edit-bug-modal');\n        document.getElementById(\"bugEditText\").value = bugText;\n    }\n\n    return (\n            <div className=\"row bugs\">\n                {/*Add bug modal structure*/}\n                <div id=\"add-bug-modal\" className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h5>Add New Bug</h5>\n                        <Input\n                            element=\"input\"\n                            elementTitle=\"bugText\"\n                            type=\"text\"\n                            placeholder=\"Enter A Bug\"\n                            validators={[VALIDATOR_REQUIRE()]}\n                            errorText=\"Please enter todo text.\"\n                            onInput={inputHandler}\n                        />\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button disabled={!formState.isValid} onClick={addBugHandler}\n                                className=\"modal-close btn-flat\"\n                        >\n                            Add New Bug\n                        </button>\n                    </div>\n                </div>\n\n                {/*Edit bug modal structure*/}\n                <div id=\"edit-bug-modal\" className=\"modal\">\n                    <div className=\"modal-content\">\n                        <h5>Edit Bug</h5>\n                        <Input\n                            element=\"input\"\n                            elementTitle=\"bugEditText\"\n                            type=\"text\"\n                            placeholder=\"Enter A Bug\"\n                            validators={[VALIDATOR_REQUIRE()]}\n                            errorText=\"Please enter bug text.\"\n                            onInput={inputHandler}\n                            initialValue={editBugText}\n                            initialValidity={true}\n                        />\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button onClick={editBugHandler}\n                                disabled={!formState.isValid}  className=\"modal-close btn-flat\">Edit Bug</button>\n                    </div>\n                </div>\n                <>\n                    {(isMemberOfThisProject || isCreatedByUser) && (\n                        //Add bug button of add bug modal\n                        <button data-target=\"add-bug-modal\" className=\"light-blue lighten-1 modal-trigger add-btn\">\n                            <i className=\"fas fa-plus-circle\" />      ADD NEW BUG\n                        </button>\n                    )}\n\n                    <h5>Not Fixed Bug List</h5>\n                    <div className=\" \">\n                        {project && project.bugs && project?.bugs.map(bug => (\n                            <NotFixedBugRow key={bug._id} bug={bug} projectId={projectId} handleClickOnEdit={handleClickOnEdit}/>\n                        ))\n                        }\n                    </div>\n                    <h5>Fixed Bug List</h5>\n                    <div className=\" \">\n                        {project && project.bugs && project?.bugs.map(bug => (\n                            <FixedBugRow key={bug._id} bug={bug} projectId={projectId}/>\n                        ))\n                        }\n                    </div>\n                </>\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    isMemberOfThisProject: state.project.isMemberOfThisProject,\n    isCreatedByUser: state.project.isCreatedByUser,\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { addBug, editBug })(Bugs);\n","import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\n\nimport ProjectSummaryRow from \"./projectSummary/ProjectSummary\";\nimport Overview from \"./overview/Overview\";\nimport Discussion from \"./discussion/Discussion\";\nimport Activities from \"./activities/ActivitiesScreen\";\nimport EditProjectDetails from \"./edit-project-details/EditProjectDetails\";\nimport Todos from \"./todos/Todos\";\nimport Bugs from \"./bugs/Bugs\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport {\n    getProjectById, getNotAssignedMember, prepareActivity, prepareWorkDonePreview, getIsMemberAndCreatorOfProject\n} from \"../../actions/project-action\";\n\nconst ProjectScreen = ({ getProjectById ,selectedItem, getNotAssignedMember, prepareActivity, prepareWorkDonePreview,\n                     getIsMemberAndCreatorOfProject\n}) => {\n    const { sendRequest } = useHttpClient();\n    const projectId = useParams().projectId;\n\n    useEffect(() => {\n        getIsMemberAndCreatorOfProject(projectId, sendRequest);\n        getProjectById(projectId, sendRequest);\n        getNotAssignedMember(projectId, sendRequest);\n        prepareActivity(projectId, sendRequest);\n        prepareWorkDonePreview(projectId, sendRequest);\n    }, []);\n\n    return (\n        <div className=\"main\">\n            <>\n                <ProjectSummaryRow projectId={projectId} selectedItem={selectedItem} />\n                {selectedItem === 'overview' && <Overview />}\n                {selectedItem === 'activities' && <Activities />}\n                {selectedItem === 'edit-project' && <EditProjectDetails />}\n                {selectedItem === 'todolist' && <Todos />}\n                {selectedItem === 'bugs' && <Bugs />}\n                {selectedItem === 'discussion' && <Discussion />}\n            </>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { getProjectById, getNotAssignedMember, prepareActivity, prepareWorkDonePreview,\n    getIsMemberAndCreatorOfProject\n})(ProjectScreen);\n\n//Checking isAuthenticated here casing delay html preparing and for this index.html does not get any modal for initialization\n//So I put authentication check in projectSummary and and also other file(Overview, bug etc)\n","import React, { Fragment } from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport Projects from \"../projects/Projects\";\nimport Profile from \"../profile/Profile\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport EditProfile from \"../EditProfile/EditProfile\";\nimport MemberList from \"../Member/Members\";\nimport UploadImage from \"../ChangeImage/UploadImage\";\nimport Project from \"../project/ProjectScreen\";\n\n\nconst Routes = () => {\n    return (\n        <Fragment>\n            <Switch>\n                <PrivateRoute exact path=\"/dashboard\" component={ Dashboard }  />\n                <PrivateRoute exact path=\"/projects\" component={ Projects } />\n                <PrivateRoute exact path=\"/profile\" component={ Profile } />\n                <PrivateRoute exact path=\"/edit-profile\" component={ EditProfile } />\n                <PrivateRoute exact path=\"/members\" component={ MemberList } />\n                <PrivateRoute exact path=\"/member/:username\" component={ Profile } />\n                <PrivateRoute exact path=\"/uploadImage\" component={ UploadImage } />\n\n                <PrivateRoute exact path=\"/activities/:projectId\" selectedItem=\"activities\" component={ Project }  />\n                <PrivateRoute exact path=\"/discussion/:projectId\" selectedItem=\"discussion\" component={ Project } />\n                <PrivateRoute exact path=\"/edit-project/:projectId\" selectedItem=\"edit-project\" component={ Project } />\n                <PrivateRoute exact path=\"/todolist/:projectId\" selectedItem=\"todolist\" component={ Project } />\n                <PrivateRoute exact path=\"/bugs/:projectId\" selectedItem=\"bugs\" component={ Project  } />\n                <PrivateRoute exact path=\"/project/:projectId\" selectedItem = \"overview\" component = { Project } />\n            </Switch>\n        </Fragment>\n    )\n}\n\nexport default Routes;\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport { loadUser } from \"./actions/auth-action\";\nimport { useHttpClient } from \"./hooks/http-hook\";\n\nimport Navbar from './components/shared/layout/MainNavbar';\nimport Auth from './components/auth/auth';\nimport Routes from \"./components/routing/Routes\";\n\nconst App = () => {\n    const { sendRequest } = useHttpClient();\n\n    useEffect(() => {\n        store.dispatch(loadUser(sendRequest));\n    }, []);\n\n    return (\n        <Provider store={store}>\n            <Router>\n                <Fragment>\n                    <Navbar />\n                    <Switch>\n                        <Route exact path=\"/\" component={ Auth }  />\n                        <Route exact component={ Routes } />\n                    </Switch>\n                </Fragment>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}